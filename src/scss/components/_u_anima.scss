@use "../abstracts" as *;
@use "sass:math";

/// -----------------フェードインアニメーション//
@keyframes fade {
  0% {
    opacity: 0;
  }

  100% {
    opacity: 1;
  }
}

// 移動距離
$range: 5rem;
// 時間
$time: 1s;

.scrollIn,
.loadIn {
  opacity: 0;
  transition:
    transform $time ease-out,
    opacity $time ease-out;

  &.-up {
    transform: translate(0, $range);
  }

  &.-down {
    transform: translate(0, -$range);
  }

  &.-right {
    transform: translate($range, 0);
  }

  &.-left {
    transform: translate(-$range, 0);
  }

  &.-scale {
    transform: scale(0);
  }

  &.-active {
    opacity: 1;
    transition:
      transform $time ease-out,
      opacity $time ease-out;
    transform: none;
    @for $i from 2 through 10 {
      &.-each ~ .-each:nth-of-type(#{$i}) {
        animation-delay: #{$i * 800}ms;
      }
    }
  }
}

.fadeIn {
  animation: fadeIn 0.4s ease-in forwards;
}

@keyframes fadeIn {
  0% {
    opacity: 0;
  }

  100% {
    opacity: 1;
  }
}

.fadeUp {
  animation: fadeUp 0.4s ease-in forwards;
}

@keyframes fadeUp {
  0% {
    opacity: 0;
    transform: translateY(5rem);
  }

  100% {
    opacity: 1;
    transform: none;
  }
}

.scaleIn {
  opacity: 0;
  transform: scalc(0.8);
  // transform-origin: center;
  animation: scaleIn 0.4s ease-in forwards;
}

@keyframes scaleIn {
  0% {
    opacity: 0;
    transform: scale(0.8);
  }

  100% {
    opacity: 1;
    transform: none;
  }
}

.scroll {
  &.-leftSlide {
    position: relative;
    display: table;
    color: transparent;
    transition: 0.4s;

    &::before {
      position: absolute;
      top: 0;
      left: 0;
      z-index: 10;
      width: 0;
      height: 101%;
      margin: auto;
      content: "" !important;
      background: $color-txt;
      transform-origin: right;
    }

    > * {
      padding: 0;
      margin: auto;
      opacity: 0;
    }

    &.-active {
      color: $color-txt;
      transition: color 0s;
      transition-delay: 0.5s;

      &::before {
        animation: leftSlide 1s ease-in 0s 1 forwards;
      }

      > * {
        opacity: 1;
        transition-delay: 0.6s;
      }
    }
  }

  &.-noize {
    text-shadow: rgba;
  }

  &.-mask {
    clip-path: polygon(0 0, 0 0, 0 0);

    &.-active {
      clip-path: polygon(0 0, 400% 0, 0 500%);
      transition: clip-path 1.77s cubic-bezier(0.24, 0.13, 0.26, 1.01) 0.3s;

      @for $i from 2 through 10 {
        &.-each ~ .-each:nth-of-type(#{$i}) {
          animation-delay: #{$i * 800}ms;
        }
      }
    }
  }

  &.-maskImg {
    overflow: hidden;

    img {
      clip-path: inset(0 0 0 100%);
      background-color: #fff;
      transform: scale(1.15);
    }

    &.-active {
      img {
        animation: imgFade 1.2s cubic-bezier(0.165, 0.84, 0.44, 1) forwards;
      }
    }
  }

  &.-scaleIn {
    opacity: 0;
    scale: 1.2;

    &.-active {
      opacity: 1;
      transition:
        scale 1.2s cubic-bezier(0, 0, 0, 1),
        opacity 1.2s cubic-bezier(0, 0, 0, 1);
      scale: none;
    }
  }
}

@keyframes fade {
  0% {
    // transform: scale(0);
    opacity: 0;
  }

  100% {
    // transform: scale(1);
    opacity: 1;
  }
}

@keyframes fuwafuwa {
  0%,
  100% {
    transform: translateY(0);
  }

  50% {
    transform: translateY(-20px);
  }
}

@keyframes scale {
  0%,
  100% {
    transform: scale(1);
  }

  50% {
    transform: scale(1.1);
    transform-origin: center;
  }
}
@keyframes imgFade {
  0% {
    clip-path: inset(0 0 0 100%);
    transform: scale(1.15);
  }

  60% {
    clip-path: inset(0 0 0 0);
  }

  100% {
    clip-path: inset(0 0 0 0);
    transform: scale(1);
  }
}

.scroll {
  &.-leftSlide {
    position: relative;
    display: table;
    color: transparent;
    transition: 0.4s;

    &::before {
      position: absolute;
      top: 0;
      left: 0;
      z-index: 10;
      width: 0;
      height: 101%;
      margin: auto;
      content: "" !important;
      background: $color-txt;
      transform-origin: right;
    }

    > * {
      padding: 0;
      margin: auto;
      opacity: 0;
    }

    &.-active {
      color: $color-txt;
      transition: color 0s;
      transition-delay: 0.5s;

      &::before {
        animation: leftSlide 1s ease-in 0s 1 forwards;
      }

      > * {
        opacity: 1;
        transition-delay: 0.6s;
      }
    }
  }

  &.-noize {
    text-shadow: rgba;
  }

  &.-mask {
    clip-path: polygon(0 0, 0 0, 0 0);

    &.-active {
      clip-path: polygon(0 0, 400% 0, 0 500%);
      transition: clip-path 1.77s cubic-bezier(0.24, 0.13, 0.26, 1.01) 0.3s;

      @for $i from 2 through 10 {
        &.-each ~ .-each:nth-of-type(#{$i}) {
          animation-delay: #{$i * 800}ms;
        }
      }
    }
  }

  &.-maskImg {
    overflow: hidden;

    img {
      clip-path: inset(0 0 0 100%);
      background-color: #fff;
      transform: scale(1.15);
    }

    &.-active {
      img {
        animation: imgFade 1.2s cubic-bezier(0.165, 0.84, 0.44, 1) forwards;
      }
    }
  }

  &.-scaleIn {
    opacity: 0;
    scale: 1.2;

    &.-active {
      opacity: 1;
      transition:
        scale 1.2s cubic-bezier(0, 0, 0, 1),
        opacity 1.2s cubic-bezier(0, 0, 0, 1);
      scale: none;
    }
  }
}

.typTxt {
  opacity: 0;

  > font {
    display: inline-block;
    width: fit-content;
    margin: 0;
    line-height: 1;
    opacity: 0;
    transform: scale(2.3) translate(-5px);
    transform-origin: right center;

    &.br {
      display: block;
      width: 0;
      height: 0;
      line-height: 0;
      visibility: hidden;
    }
  }

  &.-role {
    > font {
      transform: translate(-10px, 10px) rotate(-35deg);
      transform-origin: left center;
    }
  }

  &.-wave {
    > font {
      transform: translate(0, 15px);
      transform-origin: center;
    }
  }

  &.-active {
    opacity: 1;

    > font {
      opacity: 1;
      transition: 0.3s;
      transform: none;

      @for $i from 1 through 30 {
        &:nth-of-type(#{$i}) {
          transition-delay: #{500 + $i * 80}ms;
        }
      }
    }

    &.-wave {
      > font {
        animation: wave 0.35s ease-in-out 0s 1 forwards;

        @for $i from 1 through 30 {
          &:nth-of-type(#{$i}) {
            animation-delay: #{500 + $i * 80}ms;
          }
        }
      }
    }
  }
}

@keyframes wave {
  0% {
    transform: translate(0, 15px);
  }

  75% {
    transform: translate(0, -5px);
  }

  100% {
    transform: none;
  }
}

.moveTxt {
  > font {
    display: inline-block;
    overflow: hidden;
    line-height: 1;

    > font {
      display: inline-block;
      line-height: 1;
      translate: -100% 0;
    }

    &.br {
      display: block;
      width: 0;
      height: 0;
      line-height: 0;
      visibility: hidden;
    }

    &:nth-child(2n) {
      > font {
        translate: 0 100%;
      }
    }

    &:nth-child(3n) {
      > font {
        translate: 100% 0;
      }
    }

    &:nth-child(4n) {
      > font {
        translate: 0 -100%;
      }
    }
  }

  &.-active {
    > font {
      > font {
        transition: 0.6s;
        translate: none;
      }
    }
  }
}

@keyframes clipTxt {
  0% {
    clip-path: polygon(0 0, 0 0, 0 0);
  }

  100% {
    clip-path: polygon(0 0, 200% 0, 0 200%);
  }
}

@keyframes noise-anim {
  // $steps: 15;
  // @for $i from 0 through $steps {
  //   #{percentage($i*(1/$steps))} {
  //     clip: rect(random(100) + px, 9999px, random(100) + px, 0);
  //   }
  // }
  0% {
    clip: rect(84px, 9999px, 51px, 0);
  }

  6.6666666667% {
    clip: rect(76px, 9999px, 13px, 0);
  }

  13.3333333333% {
    clip: rect(29px, 9999px, 72px, 0);
  }

  20% {
    clip: rect(91px, 9999px, 4px, 0);
  }

  26.6666666667% {
    clip: rect(5px, 9999px, 35px, 0);
  }

  33.3333333333% {
    clip: rect(80px, 9999px, 84px, 0);
  }

  40% {
    clip: rect(8px, 9999px, 61px, 0);
  }

  46.6666666667% {
    clip: rect(55px, 9999px, 2px, 0);
  }

  53.3333333333% {
    clip: rect(81px, 9999px, 37px, 0);
  }

  60% {
    clip: rect(57px, 9999px, 93px, 0);
  }

  66.6666666667% {
    clip: rect(20px, 9999px, 8px, 0);
  }

  73.3333333333% {
    clip: rect(48px, 9999px, 85px, 0);
  }

  80% {
    clip: rect(62px, 9999px, 37px, 0);
  }

  86.6666666667% {
    clip: rect(52px, 9999px, 15px, 0);
  }

  93.3333333333% {
    clip: rect(58px, 9999px, 66px, 0);
  }

  100% {
    clip: rect(99px, 9999px, 70px, 0);
  }
}

@for $i from 1 through 30 {
  .scrollIn.-active.-each ~ .scrollIn.-active.-each:nth-of-type(#{$i}),
  .loadIn.-active.-each ~ .loadIn.-active.-each:nth-of-type(#{$i}) {
    transition-delay: #{$i * 80}ms;
  }

  .scroll.-active.leftSlide.-each {
    &:nth-of-type(#{$i}):before {
      animation-delay: #{$i * 200}ms;
    }

    > *:nth-of-type(#{$i}) {
      transition-delay: #{$i * 1200}ms;
    }
  }

  .-bound.-active.-each ~ .-bound.-active.-each:nth-of-type(#{$i}) {
    transition-delay: none !important;
    animation-delay: #{$i * 100}ms !important;
  }
}

@keyframes bound {
  100%,
  20%,
  50%,
  80% {
    transform: translateY(0) scale(1);
  }

  // 10%, 30% {
  //   transform: translateY(0) scale(1.1,0.8);
  // }
  0%,
  40% {
    transform: translateY(-20%) scale(1);
  }

  60% {
    transform: translateY(-10%) scale(1);
  }
}

@keyframes leftSlide {
  0% {
    width: 0;
  }

  50% {
    width: 105%;
    transform: scaleX(1);
  }

  70% {
    width: 105%;
    transform: scaleX(1);
  }

  100% {
    width: 105%;
    transform: scaleX(0);
  }
}

@keyframes catchfade {
  0% {
    // transform: scale(0);
    opacity: 0;
  }

  100% {
    // transform: scale(1);
    opacity: 1;
  }
}

@keyframes marquee-anim {
  0% {
    background-position: center left;
  }

  100% {
    background-position: center left -200%;
  }
}

// .noiseImg {
//   position: relative;
//   display: block;
//   width: fit-content;
//   overflow: hidden;
//   border: 0.2rem solid $color-prime;

//   i {
//     position: absolute;
//   }

//   .rgb {
//     position: absolute;
//     top: 0;
//     left: 0;
//     width: 100%;
//     height: 100%;
//     // background-color: red;
//     mix-blend-mode: screen;

//     &::before,
//     &::after {
//       position: absolute;
//       top: 0;
//       left: 0;
//       width: 100%;
//       height: 100%;
//       margin: auto;
//       content: "";
//       mix-blend-mode: multiply;
//     }

//     &::before {
//       background-color: red;
//       transform: translate(4px, 2px);
//       animation: noise-anim 1.5s infinite linear alternate-reverse;
//     }

//     &::after {
//       background-color: blue;
//       transform: translate(-3px, -1px);
//       animation: noise-anim 1.8s infinite linear alternate-reverse;
//     }
//   }
// }

.noiseImg {
  position: relative;
  display: block;
  width: fit-content;
  overflow: hidden;

  > picture {
    opacity: 0;
  }

  .-glitch,
  .-glitch2,
  .noiseImg_ch {
    position: absolute;
    inset: 0;
    background: inherit;
    background-size: cover;
  }

  .-glitch {
    clip-path: polygon(0 20%, 100% 20%, 100% 30%, 0 30%);
    transform: translate(5%, 0.5%);
  }

  .-glitch2 {
    clip-path: polygon(0 60%, 100% 60%, 100% 65%, 0 65%);
    transform: translate(-5%, -0.5%);
  }

  .noiseImg_ch {
    mix-blend-mode: screen;

    &::before {
      position: absolute;
      inset: 0;
      display: block;
      content: "";
      mix-blend-mode: multiply;
    }
  }

  .-red {
    transform: translate(4px, 2px);

    &::before {
      background: #f00;
    }
  }

  .-green {
    transform: translate(-1px, -4px);

    &::before {
      background: #0f0;
    }
  }

  .-blue {
    transform: translate(-3px, -1px);

    &::before {
      background: #00f;
    }
  }

  &.-active {
    > picture {
      opacity: 1;
      transition: opacity 0s;
      transition-delay: 0.8s;
    }

    .-glitch {
      animation: glitch 0.6s linear forwards;
      animation-delay: 0.3s;
    }

    .-glitch2 {
      animation: glitch 0.6s linear forwards;
      animation-delay: 0.3s;
    }

    .noiseImg_ch {
      &.-red,
      &.-green,
      &.-blue {
        animation: rgbCh 0.3s steps(1, jump-end);
        animation-delay: 0.3s;
      }
    }
  }
}

@keyframes rgbCh {
  30% {
    transform: translate(1.609017683%, 0.3253776535%);
  }

  50% {
    transform: translate(1.609017683%, 0.3253776535%);
  }

  0%,
  100% {
    transform: none;
  }
}

@keyframes glitch {
  50% {
    clip-path: polygon(0 20%, 100% 20%, 100% 30%, 0 30%);
    transform: translate(3%, 0.5%);
  }

  0%,
  100% {
    clip-path: none;
    transform: none;
  }
}

.rippleAnimation {
  position: relative;
  transition: filter 0.4s;

  &::before,
  &::after {
    position: absolute;
    inset: 0;
    z-index: -10;
    width: 100%;
    height: 100%;
    content: "";
    background-color: #fff;
    border-radius: 3.2rem 3.2rem 0 0;
    transform: translate3d(0, 0, 0);
    @include mq() {
      background-color: #000;
      border-radius: 0 0 0 2rem;
    }
  }

  &::before {
    animation: anime 2s ease-out infinite;
  }

  &::after {
    animation: anime 2s ease-out 1s infinite;
  }
  @include hover {
    filter: invert(1);
  }
}
