@charset "UTF-8";
*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

:where([hidden]:not([hidden=until-found])) {
  display: none !important;
}

:where(html) {
  -webkit-text-size-adjust: none;
  color-scheme: dark light;
  -moz-tab-size: 2;
    -o-tab-size: 2;
       tab-size: 2;
  scrollbar-gutter: stable;
}

:where(html:has(dialog:modal[open])) {
  overflow: clip;
}

@media (prefers-reduced-motion: no-preference) {
  :where(html:focus-within) {
    scroll-behavior: smooth;
  }
}
:where(body) {
  line-height: 1.5;
  font-family: system-ui, sans-serif;
  -webkit-font-smoothing: antialiased;
}

:where(button) {
  all: unset;
}

:where(input, button, textarea, select) {
  font: inherit;
  color: inherit;
}

:where(textarea) {
  resize: vertical;
  resize: block;
}

:where(button, label, select, summary, [role=button], [role=option]) {
  cursor: pointer;
}

:where(:disabled) {
  cursor: not-allowed;
}

:where(label:has(> input:disabled), label:has(+ input:disabled)) {
  cursor: not-allowed;
}

:where(a) {
  color: inherit;
  text-underline-offset: 0.2ex;
}

:where(ul, ol) {
  list-style: none;
}

:where(img, svg, video, canvas, audio, iframe, embed, object) {
  display: block;
}

:where(img, picture, svg, video) {
  max-inline-size: 100%;
  block-size: auto;
}

:where(p, h1, h2, h3, h4, h5, h6) {
  overflow-wrap: break-word;
}

:where(h1, h2, h3) {
  line-height: calc(1em + 0.5rem);
  text-wrap: balance;
}

:where(hr) {
  border: none;
  border-block-start: 1px solid;
  color: inherit;
  block-size: 0;
  overflow: visible;
}

:where(dialog) {
  border: none;
  background: none;
  inset: unset;
  max-width: unset;
  max-height: unset;
}

:where(dialog:not([open], [popover])) {
  display: none !important;
}

:where([popover]) {
  border: none;
  background: none;
  inset: unset;
  color: inherit;
}

:where([popover]:not(:popover-open)) {
  display: none !important;
}

:where(:focus-visible) {
  outline: 3px solid CanvasText;
  box-shadow: 0 0 0 5px Canvas;
  outline-offset: 1px;
}

:where(:focus-visible, :target) {
  scroll-margin-block: 8vh;
}

:where(.visually-hidden:not(:focus-within, :active)) {
  clip-path: inset(50%) !important;
  height: 1px !important;
  width: 1px !important;
  overflow: hidden !important;
  position: absolute !important;
  white-space: nowrap !important;
  border: 0 !important;
  -webkit-user-select: none !important;
     -moz-user-select: none !important;
          user-select: none !important;
}

@keyframes splide-loading {
  0% {
    transform: rotate(0);
  }
  to {
    transform: rotate(1turn);
  }
}
.splide__track--draggable {
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -moz-user-select: none;
       user-select: none;
}

.splide__track--fade > .splide__list > .splide__slide {
  margin: 0 !important;
  opacity: 0;
  z-index: 0;
}

.splide__track--fade > .splide__list > .splide__slide.is-active {
  opacity: 1;
  z-index: 1;
}

.splide--rtl {
  direction: rtl;
}

.splide__track--ttb > .splide__list {
  display: block;
}

.splide__container {
  box-sizing: border-box;
  position: relative;
}

.splide__list {
  backface-visibility: hidden;
  display: flex;
  height: 100%;
  margin: 0 !important;
  padding: 0 !important;
}

.splide.is-initialized:not(.is-active) .splide__list {
  display: block;
}

.splide__pagination {
  align-items: center;
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  margin: 0;
  pointer-events: none;
}

.splide__pagination li {
  display: inline-block;
  line-height: 1;
  list-style-type: none;
  margin: 0;
  pointer-events: auto;
}

.splide:not(.is-overflow) .splide__pagination {
  display: none;
}

.splide__progress__bar {
  width: 0;
}

.splide {
  position: relative;
  visibility: hidden;
}

.splide.is-initialized, .splide.is-rendered {
  visibility: visible;
}

.splide__slide {
  backface-visibility: hidden;
  box-sizing: border-box;
  flex-shrink: 0;
  list-style-type: none !important;
  margin: 0;
  position: relative;
}

.splide__slide img {
  vertical-align: bottom;
}

.splide__spinner {
  animation: splide-loading 1s linear infinite;
  border: 2px solid #999;
  border-left-color: transparent;
  border-radius: 50%;
  bottom: 0;
  contain: strict;
  display: inline-block;
  height: 20px;
  left: 0;
  margin: auto;
  position: absolute;
  right: 0;
  top: 0;
  width: 20px;
}

.splide__sr {
  clip: rect(0 0 0 0);
  border: 0;
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

.splide__toggle.is-active .splide__toggle__play, .splide__toggle__pause {
  display: none;
}

.splide__toggle.is-active .splide__toggle__pause {
  display: inline;
}

.splide__track {
  overflow: hidden;
  position: relative;
  z-index: 0;
}

:root {
  --font-leading: calc(27 / 15);
  --font-tracking: 0;
  --font-weight-normal: 400;
  --font-feature-settings: normal;
  --color-txt: #212121;
  --color-reversal: #fff;
  --color-gray: #d6d4d0;
  --color-prime: #463e2c;
  --color-second: rgb(179 102 102);
  --color-third: blue;
  --color-body: #fff;
  --color-highlight: #f8f8f7;
  --help-body: #fff;
  --help-btn: #fff;
  --help-arrow: #212121;
  --help-border: #212121;
  --help-caution: #c00;
  --help-stroke: #c9c9c9;
  --help-fill: #448aff;
  --transition: 0.4s ease-out;
  --headerHeight: 7.2rem;
}
@media screen and (width >= 48em) {
  :root {
    --headerHeight: 10.3rem;
    --font-tracking: 0;
    --font-leading: calc(30 / 16);
  }
}

:root {
  --size-container: 1200;
  --size-logo: 200;
  --leading-trim: calc((1em - 1lh) / 2);
  --font-family-base: Noto Sans JP, NotoSansJP, Noto Sans Japanese, sans-serif;
  --font-setting-base: var(--font-weight-normal) var(--font-size-base) / var(--font-leading) var(--font-family-base);
  --font-size-heading-1: 4rem;
  --font-size-heading-2: 3.6rem;
  --font-size-heading-3: 2.8rem;
  --font-size-heading-4: 2.4rem;
  --font-size-heading-5: 2rem;
  --font-size-large-2: 1.8rem;
  --font-size-large-1: 1.6rem;
  --font-size-base: 1.4rem;
  --font-size-small-1: 1.2rem;
  --font-size-small-2: 1rem;
}
@media screen and (width >= 48em) {
  :root {
    --font-size-heading-1: 6.4rem;
    --font-size-heading-2: 4.4rem;
    --font-size-heading-3: 3.6rem;
    --font-size-heading-4: 2.8rem;
    --font-size-heading-5: 2.4rem;
    --font-size-large-2: 2rem;
    --font-size-large-1: 1.8rem;
    --font-size-base: 1.6rem;
    --font-size-small-1: 1.4rem;
    --font-size-small-2: 1.2rem;
  }
}

.textLink::after, .c_btn[target=_blank]::after {
  -webkit-mask-image: url("data:image/svg+xml;charset=utf8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%2218%22%20height%3D%2218%22%20viewBox%3D%220%200%2018%2018%22%3E%20%3Cpath%20id%3D%22open_in_new_FILL0_wght400_GRAD0_opsz20%22%20d%3D%22M145.929-798a1.857%2C1.857%2C0%2C0%2C1-1.362-.567%2C1.857%2C1.857%2C0%2C0%2C1-.567-1.362v-14.143a1.857%2C1.857%2C0%2C0%2C1%2C.567-1.362%2C1.857%2C1.857%2C0%2C0%2C1%2C1.362-.566H153v1.929h-7.071v14.143h14.143V-807H162v7.071a1.857%2C1.857%2C0%2C0%2C1-.567%2C1.362%2C1.857%2C1.857%2C0%2C0%2C1-1.362.567Zm4.58-5.143-1.366-1.366%2C9.563-9.562h-3.134V-816H162v6.429h-1.929v-3.134Z%22%20transform%3D%22translate(-144%20816)%22%20fill%3D%22%230a1284%22%2F%3E%3C%2Fsvg%3E");
          mask-image: url("data:image/svg+xml;charset=utf8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%2218%22%20height%3D%2218%22%20viewBox%3D%220%200%2018%2018%22%3E%20%3Cpath%20id%3D%22open_in_new_FILL0_wght400_GRAD0_opsz20%22%20d%3D%22M145.929-798a1.857%2C1.857%2C0%2C0%2C1-1.362-.567%2C1.857%2C1.857%2C0%2C0%2C1-.567-1.362v-14.143a1.857%2C1.857%2C0%2C0%2C1%2C.567-1.362%2C1.857%2C1.857%2C0%2C0%2C1%2C1.362-.566H153v1.929h-7.071v14.143h14.143V-807H162v7.071a1.857%2C1.857%2C0%2C0%2C1-.567%2C1.362%2C1.857%2C1.857%2C0%2C0%2C1-1.362.567Zm4.58-5.143-1.366-1.366%2C9.563-9.562h-3.134V-816H162v6.429h-1.929v-3.134Z%22%20transform%3D%22translate(-144%20816)%22%20fill%3D%22%230a1284%22%2F%3E%3C%2Fsvg%3E");
}

* {
  box-sizing: border-box;
  font-size: 100%;
}
*::before, *::after {
  box-sizing: inherit;
}

@media (prefers-reduced-motion: reduce) {
  *,
  ::before,
  ::after {
    transition-duration: 1ms !important;
    animation-duration: 1ms !important;
    animation-iteration-count: 1 !important;
    scroll-behavior: auto !important;
  }
}
input::-moz-focus-inner {
  padding: 0;
  margin: 0;
  border: 0;
}

ul,
ol,
dd {
  padding: 0;
  margin: 0;
  list-style: none;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 0;
  font-size: inherit;
  font-weight: inherit;
  text-wrap: wrap;
}

cite {
  font-style: normal;
}

fieldset {
  padding: 0;
  margin: 0;
  border-width: 0;
}

button {
  padding: 0;
  color: inherit;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  cursor: pointer;
  background-color: transparent;
  border: none;
}

summary {
  display: block;
  list-style: none;
}

summary::-webkit-details-marker {
  display: none;
}

img {
  max-width: 100%;
  height: auto;
  max-height: 100%;
}

figure,
picture {
  display: block;
  padding: 0;
  margin: 0;
  line-height: 1;
  text-align: center;
}
figure figcaption,
picture figcaption {
  margin: auto;
  text-align: left;
}

html,
body {
  -webkit-text-size-adjust: 100%;
     -moz-text-size-adjust: 100%;
          text-size-adjust: 100%;
}

html {
  overflow: auto;
  font-size: 62.5%;
}

body {
  width: 100%;
  overflow: hidden;
  font: var(--font-setting-base);
  font-feature-settings: var(--font-feature-settings);
  color: var(--color-txt);
  letter-spacing: var(--font-tracking);
  word-wrap: break-word;
  overflow-wrap: break-word;
  background-color: var(--color-body);
  -webkit-font-smoothing: antialiased;
  backface-visibility: hidden;
}

::-moz-selection {
  color: var(--color-reversal);
  background-color: var(--color-prime);
}

::selection {
  color: var(--color-reversal);
  background-color: var(--color-prime);
}

main {
  min-height: 70vh;
}

a,
button {
  color: inherit;
  text-decoration: none;
}
a:focus-visible,
button:focus-visible {
  outline: solid 0.2rem var(--color-prime);
  outline-offset: 0.3rem;
  box-shadow: none;
}

[tabindex="-1"]:focus-visible {
  outline: none !important;
  box-shadow: none;
}

@media screen and (width >= 48em) {
  a[href^="tel:"] {
    color: inherit !important;
    text-decoration: none !important;
    pointer-events: none;
  }
}
.contentInner {
  width: 100%;
  max-width: 123.2rem;
  padding: 0 min(4.2666666667vw,3.2rem);
  margin: auto;
}
@media screen and (width >= 48em) {
  .contentInner {
    padding: 0 1.6rem;
  }
}
@media screen and (width < 48em) {
  .contentInner {
    padding: 0 min(4.2666666667vw,3.2rem);
  }
  .pcOnly {
    display: none !important;
  }
}

@media screen and (width >= 48em) {
  .spOnly {
    display: none !important;
  }
}

.txtHidden {
  position: absolute;
  width: 0.1rem;
  height: 0.1rem;
  overflow: hidden;
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
  white-space: nowrap;
}

.countReset {
  counter-reset: number 0;
}

.skipLink:focus-visible {
  z-index: 99;
  width: 100%;
  height: 1.5em;
  clip: unset;
  clip-path: none;
  color: var(--color-reversal);
  background-color: var(--color-prime);
  outline-offset: 0;
}

.frameWrapper {
  position: relative;
  width: 100%;
  aspect-ratio: 16/9;
}
.frameWrapper iframe {
  position: absolute;
  top: 0;
  right: 0;
  width: 100%;
  height: 100%;
  border: 0;
}

/* ボックス  */
/* /ボックス  */
/* ボタン */
.c_btn {
  position: relative;
  z-index: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 1em;
  font-weight: bold;
  color: #212121;
  text-decoration: none;
  border: 0.1rem solid #212121;
  border-radius: 0.8rem;
  box-shadow: 0 0.3rem 0 0 #212121;
  transition: translate 0.2s, box-shadow 0.2s;
}
@media (any-hover: hover) {
  .c_btn:hover {
    box-shadow: none;
    translate: 0 0.3rem;
  }
}
.c_btn:focus-visible {
  box-shadow: none;
  translate: 0 0.3rem;
}
.c_btn::after {
  position: absolute;
  inset: 0;
  z-index: 10;
  width: 100%;
  height: 100%;
  margin: auto;
  content: "";
  border-radius: 0.8rem;
  outline: 0.3rem solid #448aff;
  outline-offset: 0;
  opacity: 0;
}
.c_btn.-color {
  position: relative;
  height: 4.8rem;
  aspect-ratio: 1/1;
  padding: 0.5rem;
}
.c_btn.-color.-select {
  position: relative;
  pointer-events: none;
  border-color: transparent;
  box-shadow: none;
}
.c_btn.-color.-select::after {
  opacity: 1;
}
.c_btn.-color .btnColor {
  width: 100%;
  height: 100%;
  border: 0.1rem solid #212121;
  border-radius: 0.8rem;
}
.c_btn.-color .btnColor.-black {
  background-color: #212121;
}
.c_btn.-color .btnColor.-gray {
  background-color: #c9c9c9;
}
.c_btn[target=_blank]::after {
  background-color: var(--color-reversal);
  -webkit-mask-repeat: no-repeat;
          mask-repeat: no-repeat;
  -webkit-mask-position: center;
          mask-position: center;
  -webkit-mask-size: contain;
          mask-size: contain;
}
@media (any-hover: hover) {
  .c_btn[target=_blank]:hover::after {
    background-color: var(--color-prime);
    translate: none;
  }
}
.c_btn[target=_blank]:focus-visible::after {
  background-color: var(--color-prime);
  translate: none;
}
.c_btn[href^="#"]::after {
  width: 1.2rem;
  height: 1.2rem;
  background: none;
  border: solid 0.15rem var(--color-white);
  border-width: 0 0.15rem 0.15rem 0;
  -webkit-mask-image: none;
          mask-image: none;
  transition: border-color var(--transition-base), translate var(--transition-base);
  rotate: 45deg;
}
@media (any-hover: hover) {
  .c_btn[href^="#"]:hover::after {
    border-color: var(--color-prime);
    translate: 0 0.3rem;
  }
}
.c_btn[href^="#"]:focus-visible::after {
  border-color: var(--color-prime);
  translate: 0 0.3rem;
}
.c_btn.-invert {
  color: var(--color-prime);
}
.c_btn.-invert::before {
  transform: scale(0, 1);
  transform-origin: right top;
}
.c_btn.-invert::after {
  background-color: var(--color-prime);
}
.c_btn.-invert[href^="#"]::after {
  background: none;
  border-color: var(--color-prime);
}
@media (any-hover: hover) {
  .c_btn.-invert:hover {
    color: var(--color-white);
  }
  .c_btn.-invert:hover::before {
    transform: scale(1, 1);
    transform-origin: left top;
  }
  .c_btn.-invert:hover::after {
    background-color: var(--color-white);
  }
  .c_btn.-invert:hover[href^="#"]::after {
    background: none;
    border-color: var(--color-white);
  }
}
.c_btn.-invert:focus-visible {
  color: var(--color-white);
}
.c_btn.-invert:focus-visible::before {
  transform: scale(1, 1);
  transform-origin: left top;
}
.c_btn.-invert:focus-visible::after {
  background-color: var(--color-white);
}
.c_btn.-invert:focus-visible[href^="#"]::after {
  background: none;
  border-color: var(--color-white);
}

/* /ボタン  */
/* フィルター  */
.c_filter .c_filter_list li {
  position: relative;
}
.c_filter .c_filter_list label {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 5.6rem;
  color: var(--color-reversal);
  background-color: var(--color-prime);
  border: 0.15rem solid var(--color-prime);
  border-radius: 999rem;
  transition: background-color 0.4s, color 0.4s;
}
@media (any-hover: hover) {
  .c_filter .c_filter_list label:hover {
    color: var(--color-prime);
    background-color: var(--color-reversal);
  }
}
.c_filter .c_filter_list label:focus-visible {
  color: var(--color-prime);
  background-color: var(--color-reversal);
}
.c_filter .c_filter_list input {
  position: absolute;
  width: 100%;
  height: 100%;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
}
.c_filter .c_filter_list input:checked + label {
  color: var(--color-prime);
  background-color: var(--color-reversal);
}
.c_filter_more {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  max-width: 24rem;
  height: 5.6rem;
  margin: 1.6rem auto;
  color: var(--color-reversal);
  text-align: center;
  background-color: var(--color-prime);
  border: 0.15rem solid var(--color-prime);
  border-radius: 999rem;
  transition: background-color 0.4s, color 0.4s;
}
@media (any-hover: hover) {
  .c_filter_more:hover {
    color: var(--color-prime);
    background-color: var(--color-reversal);
  }
}
.c_filter_more:focus-visible {
  color: var(--color-prime);
  background-color: var(--color-reversal);
}
.c_filter_item, .c_filter_more {
  display: none;
  opacity: 0;
  transition: opacity 0.4s;
}
.c_filter .-visible {
  display: block;
  opacity: 1;
  animation: fade 0.4s;
}

/* ページャー  */
.c_pager {
  display: flex;
  flex-wrap: wrap;
  gap: 0.8rem;
  width: -moz-fit-content;
  width: fit-content;
  margin: 2.4rem auto 0;
}
.c_pager_item button {
  display: flex;
  align-items: center;
  justify-content: center;
  height: 3.1rem;
  aspect-ratio: 1/1;
  font-weight: bold;
  line-height: 1;
  color: var(--color-reversal);
  background-color: var(--color-prime);
  border: 0.1rem solid var(--color-prime);
  border-radius: 50%;
  transition: color var(--transition), background-color var(--transition);
}
.c_pager_item button.-current {
  color: var(--color-prime);
  background-color: var(--color-reversal);
}
@media (any-hover: hover) {
  .c_pager_item button.-number:hover {
    color: var(--color-prime);
    background-color: var(--color-reversal);
  }
}
.c_pager_item button.-number:focus-visible {
  color: var(--color-prime);
  background-color: var(--color-reversal);
}
.c_pager_item button.-arrow {
  position: relative;
  background-color: transparent;
  border: 0;
  transition: opacity var(--transition);
}
@media (any-hover: hover) {
  .c_pager_item button.-arrow:hover {
    opacity: 0.5;
  }
}
.c_pager_item button.-arrow:focus-visible {
  opacity: 0.5;
}
.c_pager_item button.-arrow::after {
  position: absolute;
  inset: 0;
  right: 0.3rem;
  height: 1.2rem;
  aspect-ratio: 1/1;
  margin: auto;
  content: "";
  border: 0.2rem solid var(--color-prime);
  border-width: 0.2rem 0.2rem 0 0;
  rotate: 45deg;
}
.c_pager_item button.-arrow.-prev {
  rotate: 180deg;
}

/* スライド  */
.c_slider_arrow {
  position: relative;
}
.c_slider .splide__arrow {
  position: absolute;
  top: 50%;
  z-index: 500;
  width: 6rem;
  height: 6rem;
  margin-top: unset;
  color: transparent;
  text-indent: -9999px;
  cursor: pointer;
  background: var(--color-prime);
  border: 0;
  border-radius: 50%;
  transition: opacity 0.4s;
  transform: none;
}
.c_slider .splide__arrow svg {
  position: absolute;
  inset: 0;
  margin: auto;
  fill: var(--color-reversal);
}
@media screen and (width >= 48em) {
  .c_slider .splide__arrow {
    width: min(10.6666666667vw,8rem);
    height: min(10.6666666667vw,8rem);
  }
}
@media (any-hover: hover) {
  .c_slider .splide__arrow:hover {
    opacity: 0.7;
  }
}
.c_slider .splide__arrow:focus-visible {
  opacity: 0.7;
}
.c_slider .splide__arrow:disabled {
  opacity: 0;
}
.c_slider .splide__arrow--prev {
  left: -1.5rem;
  transform: scaleX(-1) translateY(-50%);
}
@media screen and (width >= 48em) {
  .c_slider .splide__arrow--prev {
    left: min(-4vw,-3rem);
  }
}
.c_slider .splide__arrow--next {
  right: -1.5rem;
  transform: translateY(-50%);
}
@media screen and (width >= 48em) {
  .c_slider .splide__arrow--next {
    right: min(-4vw,-3rem);
  }
}
.c_slider .splide__pagination {
  gap: 2.6rem 0;
}
@media screen and (width >= 48em) {
  .c_slider .splide__pagination {
    gap: 0 min(6.9333333333vw,5.2rem);
  }
}
.c_slider .splide__pagination li {
  display: flex;
  align-items: center;
  width: auto;
  height: auto;
  margin: 0;
}
.c_slider .splide__pagination li button {
  position: relative;
  width: 2.5rem;
  height: 2.5rem;
  padding: 0;
  color: transparent;
  cursor: pointer;
  border: none;
  border-radius: 50%;
  opacity: 0.3;
}
.c_slider .splide__pagination li button::after {
  position: absolute;
  inset: 0;
  width: 0.7rem;
  height: 0.7rem;
  margin: auto;
  content: "";
  background-color: var(--color-reversal);
  border-radius: 50%;
}
@media screen and (width >= 48em) {
  .c_slider .splide__pagination li button::after {
    width: min(1.8666666667vw,1.4rem);
    height: min(1.8666666667vw,1.4rem);
    background-color: var(--color-txt);
  }
}
.c_slider .splide__pagination li .splide__pagination__page.is-active {
  opacity: 1;
}
.c_slider .splide__pagination.-circle .sliderCircle {
  position: absolute;
  inset: 0;
  margin: auto;
  fill: none;
  stroke: var(--color-reversal);
  stroke-dasharray: 0, 75.36;
  stroke-width: 0.05rem;
  transform: rotate(-90deg);
}
@media screen and (width >= 48em) {
  .c_slider .splide__pagination.-circle .sliderCircle {
    stroke: #333;
  }
}
.c_slider .splide__pagination.-circle .splide__pagination__page.is-active .sliderCircle {
  animation: line_animation01 6s ease-in infinite;
}
@media screen and (width >= 48em) {
  .c_slider.-bar {
    padding: 0;
  }
  .c_slider.-bar .pagerBarBg {
    margin: min(4.2666666667vw,3.2rem) auto 0;
    background: #989898;
  }
  .c_slider.-bar .pagerBar {
    width: 0;
    height: 0.1rem;
    background: var(--color-prime);
    transition: width 400ms ease;
  }
}

@keyframes line_animation01 {
  0% {
    stroke-dasharray: 0, 75.36;
  }
  100% {
    stroke-dasharray: 75.36, 75.36;
  }
}
/* /スライド  */
/* タグ  */
.c_tag {
  display: flex;
  flex-wrap: wrap;
  gap: 0.8rem;
  margin-bottom: 2.4rem;
}
.c_tag_item {
  display: flex;
  align-items: center;
  justify-content: center;
  min-height: 3.1rem;
  padding: 0.8rem;
  font-size: 1.5rem;
  font-weight: bold;
  color: var(--color-reversal);
  background-color: #424242;
}

/* 見出し  */
.c_ttl_item {
  margin-bottom: 2.4rem;
  font-size: 2.4rem;
  font-weight: bold;
  line-height: 1.3333333333;
}
.c_ttl_18 {
  margin-bottom: 1.2rem;
  font-size: 1.8rem;
  line-height: 1.5;
}

.-numTtl {
  position: relative;
  padding-left: 2.8em;
  text-indent: -2.9em;
}
.-numTtl::before {
  margin-right: 0.1em;
  color: var(--color-prime);
  content: counter(number, decimal-leading-zero) ".";
  counter-increment: number 1;
  font-size: 2.4rem;
}
@media screen and (width >= 48em) {
  .-numTtl::before {
    font-size: 3.2rem;
  }
}

/* /見出し  */
@keyframes fade {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}
.scrollIn,
.loadIn {
  opacity: 0;
  transition: transform 1s ease-out, opacity 1s ease-out;
}
.scrollIn.-up,
.loadIn.-up {
  transform: translate(0, 5rem);
}
.scrollIn.-down,
.loadIn.-down {
  transform: translate(0, -5rem);
}
.scrollIn.-right,
.loadIn.-right {
  transform: translate(5rem, 0);
}
.scrollIn.-left,
.loadIn.-left {
  transform: translate(-5rem, 0);
}
.scrollIn.-scale,
.loadIn.-scale {
  transform: scale(0);
}
.scrollIn.-active,
.loadIn.-active {
  opacity: 1;
  transition: transform 1s ease-out, opacity 1s ease-out;
  transform: none;
}
.scrollIn.-active.-each ~ .-each:nth-of-type(2),
.loadIn.-active.-each ~ .-each:nth-of-type(2) {
  animation-delay: 1600ms;
}
.scrollIn.-active.-each ~ .-each:nth-of-type(3),
.loadIn.-active.-each ~ .-each:nth-of-type(3) {
  animation-delay: 2400ms;
}
.scrollIn.-active.-each ~ .-each:nth-of-type(4),
.loadIn.-active.-each ~ .-each:nth-of-type(4) {
  animation-delay: 3200ms;
}
.scrollIn.-active.-each ~ .-each:nth-of-type(5),
.loadIn.-active.-each ~ .-each:nth-of-type(5) {
  animation-delay: 4000ms;
}
.scrollIn.-active.-each ~ .-each:nth-of-type(6),
.loadIn.-active.-each ~ .-each:nth-of-type(6) {
  animation-delay: 4800ms;
}
.scrollIn.-active.-each ~ .-each:nth-of-type(7),
.loadIn.-active.-each ~ .-each:nth-of-type(7) {
  animation-delay: 5600ms;
}
.scrollIn.-active.-each ~ .-each:nth-of-type(8),
.loadIn.-active.-each ~ .-each:nth-of-type(8) {
  animation-delay: 6400ms;
}
.scrollIn.-active.-each ~ .-each:nth-of-type(9),
.loadIn.-active.-each ~ .-each:nth-of-type(9) {
  animation-delay: 7200ms;
}
.scrollIn.-active.-each ~ .-each:nth-of-type(10),
.loadIn.-active.-each ~ .-each:nth-of-type(10) {
  animation-delay: 8000ms;
}

.fadeIn {
  animation: fadeIn 0.4s ease-in forwards;
}

@keyframes fadeIn {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}
.fadeUp {
  animation: fadeUp 0.4s ease-in forwards;
}

@keyframes fadeUp {
  0% {
    opacity: 0;
    transform: translateY(5rem);
  }
  100% {
    opacity: 1;
    transform: none;
  }
}
.scaleIn {
  opacity: 0;
  transform: scalc(0.8);
  animation: scaleIn 0.4s ease-in forwards;
}

@keyframes scaleIn {
  0% {
    opacity: 0;
    transform: scale(0.8);
  }
  100% {
    opacity: 1;
    transform: none;
  }
}
.scroll.-leftSlide {
  position: relative;
  display: table;
  color: transparent;
  transition: 0.4s;
}
.scroll.-leftSlide::before {
  position: absolute;
  top: 0;
  left: 0;
  z-index: 10;
  width: 0;
  height: 101%;
  margin: auto;
  content: "" !important;
  background: var(--color-txt);
  transform-origin: right;
}
.scroll.-leftSlide > * {
  padding: 0;
  margin: auto;
  opacity: 0;
}
.scroll.-leftSlide.-active {
  color: var(--color-txt);
  transition: color 0s;
  transition-delay: 0.5s;
}
.scroll.-leftSlide.-active::before {
  animation: leftSlide 1s ease-in 0s 1 forwards;
}
.scroll.-leftSlide.-active > * {
  opacity: 1;
  transition-delay: 0.6s;
}
.scroll.-noize {
  text-shadow: rgba;
}
.scroll.-mask {
  clip-path: polygon(0 0, 0 0, 0 0);
}
.scroll.-mask.-active {
  clip-path: polygon(0 0, 400% 0, 0 500%);
  transition: clip-path 1.77s cubic-bezier(0.24, 0.13, 0.26, 1.01) 0.3s;
}
.scroll.-mask.-active.-each ~ .-each:nth-of-type(2) {
  animation-delay: 1600ms;
}
.scroll.-mask.-active.-each ~ .-each:nth-of-type(3) {
  animation-delay: 2400ms;
}
.scroll.-mask.-active.-each ~ .-each:nth-of-type(4) {
  animation-delay: 3200ms;
}
.scroll.-mask.-active.-each ~ .-each:nth-of-type(5) {
  animation-delay: 4000ms;
}
.scroll.-mask.-active.-each ~ .-each:nth-of-type(6) {
  animation-delay: 4800ms;
}
.scroll.-mask.-active.-each ~ .-each:nth-of-type(7) {
  animation-delay: 5600ms;
}
.scroll.-mask.-active.-each ~ .-each:nth-of-type(8) {
  animation-delay: 6400ms;
}
.scroll.-mask.-active.-each ~ .-each:nth-of-type(9) {
  animation-delay: 7200ms;
}
.scroll.-mask.-active.-each ~ .-each:nth-of-type(10) {
  animation-delay: 8000ms;
}
.scroll.-maskImg {
  overflow: hidden;
}
.scroll.-maskImg img {
  clip-path: inset(0 0 0 100%);
  background-color: #fff;
  transform: scale(1.15);
}
.scroll.-maskImg.-active img {
  animation: imgFade 1.2s cubic-bezier(0.165, 0.84, 0.44, 1) forwards;
}
.scroll.-scaleIn {
  opacity: 0;
  scale: 1.2;
}
.scroll.-scaleIn.-active {
  opacity: 1;
  transition: scale 1.2s cubic-bezier(0, 0, 0, 1), opacity 1.2s cubic-bezier(0, 0, 0, 1);
  scale: none;
}

@keyframes fade {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}
@keyframes fuwafuwa {
  0%, 100% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-20px);
  }
}
@keyframes scale {
  0%, 100% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.1);
    transform-origin: center;
  }
}
@keyframes imgFade {
  0% {
    clip-path: inset(0 0 0 100%);
    transform: scale(1.15);
  }
  60% {
    clip-path: inset(0 0 0 0);
  }
  100% {
    clip-path: inset(0 0 0 0);
    transform: scale(1);
  }
}
.scroll.-leftSlide {
  position: relative;
  display: table;
  color: transparent;
  transition: 0.4s;
}
.scroll.-leftSlide::before {
  position: absolute;
  top: 0;
  left: 0;
  z-index: 10;
  width: 0;
  height: 101%;
  margin: auto;
  content: "" !important;
  background: var(--color-txt);
  transform-origin: right;
}
.scroll.-leftSlide > * {
  padding: 0;
  margin: auto;
  opacity: 0;
}
.scroll.-leftSlide.-active {
  color: var(--color-txt);
  transition: color 0s;
  transition-delay: 0.5s;
}
.scroll.-leftSlide.-active::before {
  animation: leftSlide 1s ease-in 0s 1 forwards;
}
.scroll.-leftSlide.-active > * {
  opacity: 1;
  transition-delay: 0.6s;
}
.scroll.-noize {
  text-shadow: rgba;
}
.scroll.-mask {
  clip-path: polygon(0 0, 0 0, 0 0);
}
.scroll.-mask.-active {
  clip-path: polygon(0 0, 400% 0, 0 500%);
  transition: clip-path 1.77s cubic-bezier(0.24, 0.13, 0.26, 1.01) 0.3s;
}
.scroll.-mask.-active.-each ~ .-each:nth-of-type(2) {
  animation-delay: 1600ms;
}
.scroll.-mask.-active.-each ~ .-each:nth-of-type(3) {
  animation-delay: 2400ms;
}
.scroll.-mask.-active.-each ~ .-each:nth-of-type(4) {
  animation-delay: 3200ms;
}
.scroll.-mask.-active.-each ~ .-each:nth-of-type(5) {
  animation-delay: 4000ms;
}
.scroll.-mask.-active.-each ~ .-each:nth-of-type(6) {
  animation-delay: 4800ms;
}
.scroll.-mask.-active.-each ~ .-each:nth-of-type(7) {
  animation-delay: 5600ms;
}
.scroll.-mask.-active.-each ~ .-each:nth-of-type(8) {
  animation-delay: 6400ms;
}
.scroll.-mask.-active.-each ~ .-each:nth-of-type(9) {
  animation-delay: 7200ms;
}
.scroll.-mask.-active.-each ~ .-each:nth-of-type(10) {
  animation-delay: 8000ms;
}
.scroll.-maskImg {
  overflow: hidden;
}
.scroll.-maskImg img {
  clip-path: inset(0 0 0 100%);
  background-color: #fff;
  transform: scale(1.15);
}
.scroll.-maskImg.-active img {
  animation: imgFade 1.2s cubic-bezier(0.165, 0.84, 0.44, 1) forwards;
}
.scroll.-scaleIn {
  opacity: 0;
  scale: 1.2;
}
.scroll.-scaleIn.-active {
  opacity: 1;
  transition: scale 1.2s cubic-bezier(0, 0, 0, 1), opacity 1.2s cubic-bezier(0, 0, 0, 1);
  scale: none;
}

.typTxt {
  opacity: 0;
}
.typTxt > font {
  display: inline-block;
  width: -moz-fit-content;
  width: fit-content;
  margin: 0;
  line-height: 1;
  opacity: 0;
  transform: scale(2.3) translate(-5px);
  transform-origin: right center;
}
.typTxt > font.br {
  display: block;
  width: 0;
  height: 0;
  line-height: 0;
  visibility: hidden;
}
.typTxt.-role > font {
  transform: translate(-10px, 10px) rotate(-35deg);
  transform-origin: left center;
}
.typTxt.-wave > font {
  transform: translate(0, 15px);
  transform-origin: center;
}
.typTxt.-active {
  opacity: 1;
}
.typTxt.-active > font {
  opacity: 1;
  transition: 0.3s;
  transform: none;
}
.typTxt.-active > font:nth-of-type(1) {
  transition-delay: 580ms;
}
.typTxt.-active > font:nth-of-type(2) {
  transition-delay: 660ms;
}
.typTxt.-active > font:nth-of-type(3) {
  transition-delay: 740ms;
}
.typTxt.-active > font:nth-of-type(4) {
  transition-delay: 820ms;
}
.typTxt.-active > font:nth-of-type(5) {
  transition-delay: 900ms;
}
.typTxt.-active > font:nth-of-type(6) {
  transition-delay: 980ms;
}
.typTxt.-active > font:nth-of-type(7) {
  transition-delay: 1060ms;
}
.typTxt.-active > font:nth-of-type(8) {
  transition-delay: 1140ms;
}
.typTxt.-active > font:nth-of-type(9) {
  transition-delay: 1220ms;
}
.typTxt.-active > font:nth-of-type(10) {
  transition-delay: 1300ms;
}
.typTxt.-active > font:nth-of-type(11) {
  transition-delay: 1380ms;
}
.typTxt.-active > font:nth-of-type(12) {
  transition-delay: 1460ms;
}
.typTxt.-active > font:nth-of-type(13) {
  transition-delay: 1540ms;
}
.typTxt.-active > font:nth-of-type(14) {
  transition-delay: 1620ms;
}
.typTxt.-active > font:nth-of-type(15) {
  transition-delay: 1700ms;
}
.typTxt.-active > font:nth-of-type(16) {
  transition-delay: 1780ms;
}
.typTxt.-active > font:nth-of-type(17) {
  transition-delay: 1860ms;
}
.typTxt.-active > font:nth-of-type(18) {
  transition-delay: 1940ms;
}
.typTxt.-active > font:nth-of-type(19) {
  transition-delay: 2020ms;
}
.typTxt.-active > font:nth-of-type(20) {
  transition-delay: 2100ms;
}
.typTxt.-active > font:nth-of-type(21) {
  transition-delay: 2180ms;
}
.typTxt.-active > font:nth-of-type(22) {
  transition-delay: 2260ms;
}
.typTxt.-active > font:nth-of-type(23) {
  transition-delay: 2340ms;
}
.typTxt.-active > font:nth-of-type(24) {
  transition-delay: 2420ms;
}
.typTxt.-active > font:nth-of-type(25) {
  transition-delay: 2500ms;
}
.typTxt.-active > font:nth-of-type(26) {
  transition-delay: 2580ms;
}
.typTxt.-active > font:nth-of-type(27) {
  transition-delay: 2660ms;
}
.typTxt.-active > font:nth-of-type(28) {
  transition-delay: 2740ms;
}
.typTxt.-active > font:nth-of-type(29) {
  transition-delay: 2820ms;
}
.typTxt.-active > font:nth-of-type(30) {
  transition-delay: 2900ms;
}
.typTxt.-active.-wave > font {
  animation: wave 0.35s ease-in-out 0s 1 forwards;
}
.typTxt.-active.-wave > font:nth-of-type(1) {
  animation-delay: 580ms;
}
.typTxt.-active.-wave > font:nth-of-type(2) {
  animation-delay: 660ms;
}
.typTxt.-active.-wave > font:nth-of-type(3) {
  animation-delay: 740ms;
}
.typTxt.-active.-wave > font:nth-of-type(4) {
  animation-delay: 820ms;
}
.typTxt.-active.-wave > font:nth-of-type(5) {
  animation-delay: 900ms;
}
.typTxt.-active.-wave > font:nth-of-type(6) {
  animation-delay: 980ms;
}
.typTxt.-active.-wave > font:nth-of-type(7) {
  animation-delay: 1060ms;
}
.typTxt.-active.-wave > font:nth-of-type(8) {
  animation-delay: 1140ms;
}
.typTxt.-active.-wave > font:nth-of-type(9) {
  animation-delay: 1220ms;
}
.typTxt.-active.-wave > font:nth-of-type(10) {
  animation-delay: 1300ms;
}
.typTxt.-active.-wave > font:nth-of-type(11) {
  animation-delay: 1380ms;
}
.typTxt.-active.-wave > font:nth-of-type(12) {
  animation-delay: 1460ms;
}
.typTxt.-active.-wave > font:nth-of-type(13) {
  animation-delay: 1540ms;
}
.typTxt.-active.-wave > font:nth-of-type(14) {
  animation-delay: 1620ms;
}
.typTxt.-active.-wave > font:nth-of-type(15) {
  animation-delay: 1700ms;
}
.typTxt.-active.-wave > font:nth-of-type(16) {
  animation-delay: 1780ms;
}
.typTxt.-active.-wave > font:nth-of-type(17) {
  animation-delay: 1860ms;
}
.typTxt.-active.-wave > font:nth-of-type(18) {
  animation-delay: 1940ms;
}
.typTxt.-active.-wave > font:nth-of-type(19) {
  animation-delay: 2020ms;
}
.typTxt.-active.-wave > font:nth-of-type(20) {
  animation-delay: 2100ms;
}
.typTxt.-active.-wave > font:nth-of-type(21) {
  animation-delay: 2180ms;
}
.typTxt.-active.-wave > font:nth-of-type(22) {
  animation-delay: 2260ms;
}
.typTxt.-active.-wave > font:nth-of-type(23) {
  animation-delay: 2340ms;
}
.typTxt.-active.-wave > font:nth-of-type(24) {
  animation-delay: 2420ms;
}
.typTxt.-active.-wave > font:nth-of-type(25) {
  animation-delay: 2500ms;
}
.typTxt.-active.-wave > font:nth-of-type(26) {
  animation-delay: 2580ms;
}
.typTxt.-active.-wave > font:nth-of-type(27) {
  animation-delay: 2660ms;
}
.typTxt.-active.-wave > font:nth-of-type(28) {
  animation-delay: 2740ms;
}
.typTxt.-active.-wave > font:nth-of-type(29) {
  animation-delay: 2820ms;
}
.typTxt.-active.-wave > font:nth-of-type(30) {
  animation-delay: 2900ms;
}

@keyframes wave {
  0% {
    transform: translate(0, 15px);
  }
  75% {
    transform: translate(0, -5px);
  }
  100% {
    transform: none;
  }
}
.moveTxt > font {
  display: inline-block;
  overflow: hidden;
  line-height: 1;
}
.moveTxt > font > font {
  display: inline-block;
  line-height: 1;
  translate: -100% 0;
}
.moveTxt > font.br {
  display: block;
  width: 0;
  height: 0;
  line-height: 0;
  visibility: hidden;
}
.moveTxt > font:nth-child(2n) > font {
  translate: 0 100%;
}
.moveTxt > font:nth-child(3n) > font {
  translate: 100% 0;
}
.moveTxt > font:nth-child(4n) > font {
  translate: 0 -100%;
}
.moveTxt.-active > font > font {
  transition: 0.6s;
  translate: none;
}

@keyframes clipTxt {
  0% {
    clip-path: polygon(0 0, 0 0, 0 0);
  }
  100% {
    clip-path: polygon(0 0, 200% 0, 0 200%);
  }
}
@keyframes noise-anim {
  0% {
    clip: rect(84px, 9999px, 51px, 0);
  }
  6.6666666667% {
    clip: rect(76px, 9999px, 13px, 0);
  }
  13.3333333333% {
    clip: rect(29px, 9999px, 72px, 0);
  }
  20% {
    clip: rect(91px, 9999px, 4px, 0);
  }
  26.6666666667% {
    clip: rect(5px, 9999px, 35px, 0);
  }
  33.3333333333% {
    clip: rect(80px, 9999px, 84px, 0);
  }
  40% {
    clip: rect(8px, 9999px, 61px, 0);
  }
  46.6666666667% {
    clip: rect(55px, 9999px, 2px, 0);
  }
  53.3333333333% {
    clip: rect(81px, 9999px, 37px, 0);
  }
  60% {
    clip: rect(57px, 9999px, 93px, 0);
  }
  66.6666666667% {
    clip: rect(20px, 9999px, 8px, 0);
  }
  73.3333333333% {
    clip: rect(48px, 9999px, 85px, 0);
  }
  80% {
    clip: rect(62px, 9999px, 37px, 0);
  }
  86.6666666667% {
    clip: rect(52px, 9999px, 15px, 0);
  }
  93.3333333333% {
    clip: rect(58px, 9999px, 66px, 0);
  }
  100% {
    clip: rect(99px, 9999px, 70px, 0);
  }
}
.scrollIn.-active.-each ~ .scrollIn.-active.-each:nth-of-type(1),
.loadIn.-active.-each ~ .loadIn.-active.-each:nth-of-type(1) {
  transition-delay: 80ms;
}

.scroll.-active.leftSlide.-each:nth-of-type(1):before {
  animation-delay: 200ms;
}
.scroll.-active.leftSlide.-each > *:nth-of-type(1) {
  transition-delay: 1200ms;
}

.-bound.-active.-each ~ .-bound.-active.-each:nth-of-type(1) {
  transition-delay: none !important;
  animation-delay: 100ms !important;
}

.scrollIn.-active.-each ~ .scrollIn.-active.-each:nth-of-type(2),
.loadIn.-active.-each ~ .loadIn.-active.-each:nth-of-type(2) {
  transition-delay: 160ms;
}

.scroll.-active.leftSlide.-each:nth-of-type(2):before {
  animation-delay: 400ms;
}
.scroll.-active.leftSlide.-each > *:nth-of-type(2) {
  transition-delay: 2400ms;
}

.-bound.-active.-each ~ .-bound.-active.-each:nth-of-type(2) {
  transition-delay: none !important;
  animation-delay: 200ms !important;
}

.scrollIn.-active.-each ~ .scrollIn.-active.-each:nth-of-type(3),
.loadIn.-active.-each ~ .loadIn.-active.-each:nth-of-type(3) {
  transition-delay: 240ms;
}

.scroll.-active.leftSlide.-each:nth-of-type(3):before {
  animation-delay: 600ms;
}
.scroll.-active.leftSlide.-each > *:nth-of-type(3) {
  transition-delay: 3600ms;
}

.-bound.-active.-each ~ .-bound.-active.-each:nth-of-type(3) {
  transition-delay: none !important;
  animation-delay: 300ms !important;
}

.scrollIn.-active.-each ~ .scrollIn.-active.-each:nth-of-type(4),
.loadIn.-active.-each ~ .loadIn.-active.-each:nth-of-type(4) {
  transition-delay: 320ms;
}

.scroll.-active.leftSlide.-each:nth-of-type(4):before {
  animation-delay: 800ms;
}
.scroll.-active.leftSlide.-each > *:nth-of-type(4) {
  transition-delay: 4800ms;
}

.-bound.-active.-each ~ .-bound.-active.-each:nth-of-type(4) {
  transition-delay: none !important;
  animation-delay: 400ms !important;
}

.scrollIn.-active.-each ~ .scrollIn.-active.-each:nth-of-type(5),
.loadIn.-active.-each ~ .loadIn.-active.-each:nth-of-type(5) {
  transition-delay: 400ms;
}

.scroll.-active.leftSlide.-each:nth-of-type(5):before {
  animation-delay: 1000ms;
}
.scroll.-active.leftSlide.-each > *:nth-of-type(5) {
  transition-delay: 6000ms;
}

.-bound.-active.-each ~ .-bound.-active.-each:nth-of-type(5) {
  transition-delay: none !important;
  animation-delay: 500ms !important;
}

.scrollIn.-active.-each ~ .scrollIn.-active.-each:nth-of-type(6),
.loadIn.-active.-each ~ .loadIn.-active.-each:nth-of-type(6) {
  transition-delay: 480ms;
}

.scroll.-active.leftSlide.-each:nth-of-type(6):before {
  animation-delay: 1200ms;
}
.scroll.-active.leftSlide.-each > *:nth-of-type(6) {
  transition-delay: 7200ms;
}

.-bound.-active.-each ~ .-bound.-active.-each:nth-of-type(6) {
  transition-delay: none !important;
  animation-delay: 600ms !important;
}

.scrollIn.-active.-each ~ .scrollIn.-active.-each:nth-of-type(7),
.loadIn.-active.-each ~ .loadIn.-active.-each:nth-of-type(7) {
  transition-delay: 560ms;
}

.scroll.-active.leftSlide.-each:nth-of-type(7):before {
  animation-delay: 1400ms;
}
.scroll.-active.leftSlide.-each > *:nth-of-type(7) {
  transition-delay: 8400ms;
}

.-bound.-active.-each ~ .-bound.-active.-each:nth-of-type(7) {
  transition-delay: none !important;
  animation-delay: 700ms !important;
}

.scrollIn.-active.-each ~ .scrollIn.-active.-each:nth-of-type(8),
.loadIn.-active.-each ~ .loadIn.-active.-each:nth-of-type(8) {
  transition-delay: 640ms;
}

.scroll.-active.leftSlide.-each:nth-of-type(8):before {
  animation-delay: 1600ms;
}
.scroll.-active.leftSlide.-each > *:nth-of-type(8) {
  transition-delay: 9600ms;
}

.-bound.-active.-each ~ .-bound.-active.-each:nth-of-type(8) {
  transition-delay: none !important;
  animation-delay: 800ms !important;
}

.scrollIn.-active.-each ~ .scrollIn.-active.-each:nth-of-type(9),
.loadIn.-active.-each ~ .loadIn.-active.-each:nth-of-type(9) {
  transition-delay: 720ms;
}

.scroll.-active.leftSlide.-each:nth-of-type(9):before {
  animation-delay: 1800ms;
}
.scroll.-active.leftSlide.-each > *:nth-of-type(9) {
  transition-delay: 10800ms;
}

.-bound.-active.-each ~ .-bound.-active.-each:nth-of-type(9) {
  transition-delay: none !important;
  animation-delay: 900ms !important;
}

.scrollIn.-active.-each ~ .scrollIn.-active.-each:nth-of-type(10),
.loadIn.-active.-each ~ .loadIn.-active.-each:nth-of-type(10) {
  transition-delay: 800ms;
}

.scroll.-active.leftSlide.-each:nth-of-type(10):before {
  animation-delay: 2000ms;
}
.scroll.-active.leftSlide.-each > *:nth-of-type(10) {
  transition-delay: 12000ms;
}

.-bound.-active.-each ~ .-bound.-active.-each:nth-of-type(10) {
  transition-delay: none !important;
  animation-delay: 1000ms !important;
}

.scrollIn.-active.-each ~ .scrollIn.-active.-each:nth-of-type(11),
.loadIn.-active.-each ~ .loadIn.-active.-each:nth-of-type(11) {
  transition-delay: 880ms;
}

.scroll.-active.leftSlide.-each:nth-of-type(11):before {
  animation-delay: 2200ms;
}
.scroll.-active.leftSlide.-each > *:nth-of-type(11) {
  transition-delay: 13200ms;
}

.-bound.-active.-each ~ .-bound.-active.-each:nth-of-type(11) {
  transition-delay: none !important;
  animation-delay: 1100ms !important;
}

.scrollIn.-active.-each ~ .scrollIn.-active.-each:nth-of-type(12),
.loadIn.-active.-each ~ .loadIn.-active.-each:nth-of-type(12) {
  transition-delay: 960ms;
}

.scroll.-active.leftSlide.-each:nth-of-type(12):before {
  animation-delay: 2400ms;
}
.scroll.-active.leftSlide.-each > *:nth-of-type(12) {
  transition-delay: 14400ms;
}

.-bound.-active.-each ~ .-bound.-active.-each:nth-of-type(12) {
  transition-delay: none !important;
  animation-delay: 1200ms !important;
}

.scrollIn.-active.-each ~ .scrollIn.-active.-each:nth-of-type(13),
.loadIn.-active.-each ~ .loadIn.-active.-each:nth-of-type(13) {
  transition-delay: 1040ms;
}

.scroll.-active.leftSlide.-each:nth-of-type(13):before {
  animation-delay: 2600ms;
}
.scroll.-active.leftSlide.-each > *:nth-of-type(13) {
  transition-delay: 15600ms;
}

.-bound.-active.-each ~ .-bound.-active.-each:nth-of-type(13) {
  transition-delay: none !important;
  animation-delay: 1300ms !important;
}

.scrollIn.-active.-each ~ .scrollIn.-active.-each:nth-of-type(14),
.loadIn.-active.-each ~ .loadIn.-active.-each:nth-of-type(14) {
  transition-delay: 1120ms;
}

.scroll.-active.leftSlide.-each:nth-of-type(14):before {
  animation-delay: 2800ms;
}
.scroll.-active.leftSlide.-each > *:nth-of-type(14) {
  transition-delay: 16800ms;
}

.-bound.-active.-each ~ .-bound.-active.-each:nth-of-type(14) {
  transition-delay: none !important;
  animation-delay: 1400ms !important;
}

.scrollIn.-active.-each ~ .scrollIn.-active.-each:nth-of-type(15),
.loadIn.-active.-each ~ .loadIn.-active.-each:nth-of-type(15) {
  transition-delay: 1200ms;
}

.scroll.-active.leftSlide.-each:nth-of-type(15):before {
  animation-delay: 3000ms;
}
.scroll.-active.leftSlide.-each > *:nth-of-type(15) {
  transition-delay: 18000ms;
}

.-bound.-active.-each ~ .-bound.-active.-each:nth-of-type(15) {
  transition-delay: none !important;
  animation-delay: 1500ms !important;
}

.scrollIn.-active.-each ~ .scrollIn.-active.-each:nth-of-type(16),
.loadIn.-active.-each ~ .loadIn.-active.-each:nth-of-type(16) {
  transition-delay: 1280ms;
}

.scroll.-active.leftSlide.-each:nth-of-type(16):before {
  animation-delay: 3200ms;
}
.scroll.-active.leftSlide.-each > *:nth-of-type(16) {
  transition-delay: 19200ms;
}

.-bound.-active.-each ~ .-bound.-active.-each:nth-of-type(16) {
  transition-delay: none !important;
  animation-delay: 1600ms !important;
}

.scrollIn.-active.-each ~ .scrollIn.-active.-each:nth-of-type(17),
.loadIn.-active.-each ~ .loadIn.-active.-each:nth-of-type(17) {
  transition-delay: 1360ms;
}

.scroll.-active.leftSlide.-each:nth-of-type(17):before {
  animation-delay: 3400ms;
}
.scroll.-active.leftSlide.-each > *:nth-of-type(17) {
  transition-delay: 20400ms;
}

.-bound.-active.-each ~ .-bound.-active.-each:nth-of-type(17) {
  transition-delay: none !important;
  animation-delay: 1700ms !important;
}

.scrollIn.-active.-each ~ .scrollIn.-active.-each:nth-of-type(18),
.loadIn.-active.-each ~ .loadIn.-active.-each:nth-of-type(18) {
  transition-delay: 1440ms;
}

.scroll.-active.leftSlide.-each:nth-of-type(18):before {
  animation-delay: 3600ms;
}
.scroll.-active.leftSlide.-each > *:nth-of-type(18) {
  transition-delay: 21600ms;
}

.-bound.-active.-each ~ .-bound.-active.-each:nth-of-type(18) {
  transition-delay: none !important;
  animation-delay: 1800ms !important;
}

.scrollIn.-active.-each ~ .scrollIn.-active.-each:nth-of-type(19),
.loadIn.-active.-each ~ .loadIn.-active.-each:nth-of-type(19) {
  transition-delay: 1520ms;
}

.scroll.-active.leftSlide.-each:nth-of-type(19):before {
  animation-delay: 3800ms;
}
.scroll.-active.leftSlide.-each > *:nth-of-type(19) {
  transition-delay: 22800ms;
}

.-bound.-active.-each ~ .-bound.-active.-each:nth-of-type(19) {
  transition-delay: none !important;
  animation-delay: 1900ms !important;
}

.scrollIn.-active.-each ~ .scrollIn.-active.-each:nth-of-type(20),
.loadIn.-active.-each ~ .loadIn.-active.-each:nth-of-type(20) {
  transition-delay: 1600ms;
}

.scroll.-active.leftSlide.-each:nth-of-type(20):before {
  animation-delay: 4000ms;
}
.scroll.-active.leftSlide.-each > *:nth-of-type(20) {
  transition-delay: 24000ms;
}

.-bound.-active.-each ~ .-bound.-active.-each:nth-of-type(20) {
  transition-delay: none !important;
  animation-delay: 2000ms !important;
}

.scrollIn.-active.-each ~ .scrollIn.-active.-each:nth-of-type(21),
.loadIn.-active.-each ~ .loadIn.-active.-each:nth-of-type(21) {
  transition-delay: 1680ms;
}

.scroll.-active.leftSlide.-each:nth-of-type(21):before {
  animation-delay: 4200ms;
}
.scroll.-active.leftSlide.-each > *:nth-of-type(21) {
  transition-delay: 25200ms;
}

.-bound.-active.-each ~ .-bound.-active.-each:nth-of-type(21) {
  transition-delay: none !important;
  animation-delay: 2100ms !important;
}

.scrollIn.-active.-each ~ .scrollIn.-active.-each:nth-of-type(22),
.loadIn.-active.-each ~ .loadIn.-active.-each:nth-of-type(22) {
  transition-delay: 1760ms;
}

.scroll.-active.leftSlide.-each:nth-of-type(22):before {
  animation-delay: 4400ms;
}
.scroll.-active.leftSlide.-each > *:nth-of-type(22) {
  transition-delay: 26400ms;
}

.-bound.-active.-each ~ .-bound.-active.-each:nth-of-type(22) {
  transition-delay: none !important;
  animation-delay: 2200ms !important;
}

.scrollIn.-active.-each ~ .scrollIn.-active.-each:nth-of-type(23),
.loadIn.-active.-each ~ .loadIn.-active.-each:nth-of-type(23) {
  transition-delay: 1840ms;
}

.scroll.-active.leftSlide.-each:nth-of-type(23):before {
  animation-delay: 4600ms;
}
.scroll.-active.leftSlide.-each > *:nth-of-type(23) {
  transition-delay: 27600ms;
}

.-bound.-active.-each ~ .-bound.-active.-each:nth-of-type(23) {
  transition-delay: none !important;
  animation-delay: 2300ms !important;
}

.scrollIn.-active.-each ~ .scrollIn.-active.-each:nth-of-type(24),
.loadIn.-active.-each ~ .loadIn.-active.-each:nth-of-type(24) {
  transition-delay: 1920ms;
}

.scroll.-active.leftSlide.-each:nth-of-type(24):before {
  animation-delay: 4800ms;
}
.scroll.-active.leftSlide.-each > *:nth-of-type(24) {
  transition-delay: 28800ms;
}

.-bound.-active.-each ~ .-bound.-active.-each:nth-of-type(24) {
  transition-delay: none !important;
  animation-delay: 2400ms !important;
}

.scrollIn.-active.-each ~ .scrollIn.-active.-each:nth-of-type(25),
.loadIn.-active.-each ~ .loadIn.-active.-each:nth-of-type(25) {
  transition-delay: 2000ms;
}

.scroll.-active.leftSlide.-each:nth-of-type(25):before {
  animation-delay: 5000ms;
}
.scroll.-active.leftSlide.-each > *:nth-of-type(25) {
  transition-delay: 30000ms;
}

.-bound.-active.-each ~ .-bound.-active.-each:nth-of-type(25) {
  transition-delay: none !important;
  animation-delay: 2500ms !important;
}

.scrollIn.-active.-each ~ .scrollIn.-active.-each:nth-of-type(26),
.loadIn.-active.-each ~ .loadIn.-active.-each:nth-of-type(26) {
  transition-delay: 2080ms;
}

.scroll.-active.leftSlide.-each:nth-of-type(26):before {
  animation-delay: 5200ms;
}
.scroll.-active.leftSlide.-each > *:nth-of-type(26) {
  transition-delay: 31200ms;
}

.-bound.-active.-each ~ .-bound.-active.-each:nth-of-type(26) {
  transition-delay: none !important;
  animation-delay: 2600ms !important;
}

.scrollIn.-active.-each ~ .scrollIn.-active.-each:nth-of-type(27),
.loadIn.-active.-each ~ .loadIn.-active.-each:nth-of-type(27) {
  transition-delay: 2160ms;
}

.scroll.-active.leftSlide.-each:nth-of-type(27):before {
  animation-delay: 5400ms;
}
.scroll.-active.leftSlide.-each > *:nth-of-type(27) {
  transition-delay: 32400ms;
}

.-bound.-active.-each ~ .-bound.-active.-each:nth-of-type(27) {
  transition-delay: none !important;
  animation-delay: 2700ms !important;
}

.scrollIn.-active.-each ~ .scrollIn.-active.-each:nth-of-type(28),
.loadIn.-active.-each ~ .loadIn.-active.-each:nth-of-type(28) {
  transition-delay: 2240ms;
}

.scroll.-active.leftSlide.-each:nth-of-type(28):before {
  animation-delay: 5600ms;
}
.scroll.-active.leftSlide.-each > *:nth-of-type(28) {
  transition-delay: 33600ms;
}

.-bound.-active.-each ~ .-bound.-active.-each:nth-of-type(28) {
  transition-delay: none !important;
  animation-delay: 2800ms !important;
}

.scrollIn.-active.-each ~ .scrollIn.-active.-each:nth-of-type(29),
.loadIn.-active.-each ~ .loadIn.-active.-each:nth-of-type(29) {
  transition-delay: 2320ms;
}

.scroll.-active.leftSlide.-each:nth-of-type(29):before {
  animation-delay: 5800ms;
}
.scroll.-active.leftSlide.-each > *:nth-of-type(29) {
  transition-delay: 34800ms;
}

.-bound.-active.-each ~ .-bound.-active.-each:nth-of-type(29) {
  transition-delay: none !important;
  animation-delay: 2900ms !important;
}

.scrollIn.-active.-each ~ .scrollIn.-active.-each:nth-of-type(30),
.loadIn.-active.-each ~ .loadIn.-active.-each:nth-of-type(30) {
  transition-delay: 2400ms;
}

.scroll.-active.leftSlide.-each:nth-of-type(30):before {
  animation-delay: 6000ms;
}
.scroll.-active.leftSlide.-each > *:nth-of-type(30) {
  transition-delay: 36000ms;
}

.-bound.-active.-each ~ .-bound.-active.-each:nth-of-type(30) {
  transition-delay: none !important;
  animation-delay: 3000ms !important;
}

@keyframes bound {
  100%, 20%, 50%, 80% {
    transform: translateY(0) scale(1);
  }
  0%, 40% {
    transform: translateY(-20%) scale(1);
  }
  60% {
    transform: translateY(-10%) scale(1);
  }
}
@keyframes leftSlide {
  0% {
    width: 0;
  }
  50% {
    width: 105%;
    transform: scaleX(1);
  }
  70% {
    width: 105%;
    transform: scaleX(1);
  }
  100% {
    width: 105%;
    transform: scaleX(0);
  }
}
@keyframes catchfade {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}
@keyframes marquee-anim {
  0% {
    background-position: center left;
  }
  100% {
    background-position: center left -200%;
  }
}
.noiseImg {
  position: relative;
  display: block;
  width: -moz-fit-content;
  width: fit-content;
  overflow: hidden;
}
.noiseImg > picture {
  opacity: 0;
}
.noiseImg .-glitch,
.noiseImg .-glitch2,
.noiseImg .noiseImg_ch {
  position: absolute;
  inset: 0;
  background: inherit;
  background-size: cover;
}
.noiseImg .-glitch {
  clip-path: polygon(0 20%, 100% 20%, 100% 30%, 0 30%);
  transform: translate(5%, 0.5%);
}
.noiseImg .-glitch2 {
  clip-path: polygon(0 60%, 100% 60%, 100% 65%, 0 65%);
  transform: translate(-5%, -0.5%);
}
.noiseImg .noiseImg_ch {
  mix-blend-mode: screen;
}
.noiseImg .noiseImg_ch::before {
  position: absolute;
  inset: 0;
  display: block;
  content: "";
  mix-blend-mode: multiply;
}
.noiseImg .-red {
  transform: translate(4px, 2px);
}
.noiseImg .-red::before {
  background: #f00;
}
.noiseImg .-green {
  transform: translate(-1px, -4px);
}
.noiseImg .-green::before {
  background: #0f0;
}
.noiseImg .-blue {
  transform: translate(-3px, -1px);
}
.noiseImg .-blue::before {
  background: #00f;
}
.noiseImg.-active > picture {
  opacity: 1;
  transition: opacity 0s;
  transition-delay: 0.8s;
}
.noiseImg.-active .-glitch {
  animation: glitch 0.6s linear forwards;
  animation-delay: 0.3s;
}
.noiseImg.-active .-glitch2 {
  animation: glitch 0.6s linear forwards;
  animation-delay: 0.3s;
}
.noiseImg.-active .noiseImg_ch.-red, .noiseImg.-active .noiseImg_ch.-green, .noiseImg.-active .noiseImg_ch.-blue {
  animation: rgbCh 0.3s steps(1, jump-end);
  animation-delay: 0.3s;
}

@keyframes rgbCh {
  30% {
    transform: translate(1.609017683%, 0.3253776535%);
  }
  50% {
    transform: translate(1.609017683%, 0.3253776535%);
  }
  0%, 100% {
    transform: none;
  }
}
@keyframes glitch {
  50% {
    clip-path: polygon(0 20%, 100% 20%, 100% 30%, 0 30%);
    transform: translate(3%, 0.5%);
  }
  0%, 100% {
    clip-path: none;
    transform: none;
  }
}
.rippleAnimation {
  position: relative;
  transition: filter 0.4s;
}
.rippleAnimation::before, .rippleAnimation::after {
  position: absolute;
  inset: 0;
  z-index: -10;
  width: 100%;
  height: 100%;
  content: "";
  background-color: #fff;
  border-radius: 3.2rem 3.2rem 0 0;
  transform: translate3d(0, 0, 0);
}
@media screen and (width >= 48em) {
  .rippleAnimation::before, .rippleAnimation::after {
    background-color: #000;
    border-radius: 0 0 0 2rem;
  }
}
.rippleAnimation::before {
  animation: anime 2s ease-out infinite;
}
.rippleAnimation::after {
  animation: anime 2s ease-out 1s infinite;
}
@media (any-hover: hover) {
  .rippleAnimation:hover {
    filter: invert(1);
  }
}
.rippleAnimation:focus-visible {
  filter: invert(1);
}

/* アコーディオン  */
.c_pull {
  height: var(--pullHeightClosed, auto);
  overflow: hidden;
  transition: height var(--transition);
}
.c_pull .c_pull_ttl {
  position: relative;
  padding-right: 5rem;
  cursor: pointer;
}
@media screen and (width >= 48em) {
  .c_pull .c_pull_ttl {
    padding-right: min(8vw,6rem);
  }
}
.c_pull .c_pull_ttl::before, .c_pull .c_pull_ttl::after {
  position: absolute;
  inset: 0 1em 0 auto;
  width: min(6.4vw,4.8rem);
  height: 0.2rem;
  margin: auto;
  content: "";
  background-color: var(--color-prime);
  transition: rotate var(--transition);
  transform-origin: center;
}
.c_pull .c_pull_ttl::after {
  rotate: 90deg;
}
.c_pull .c_pull_ttl:focus-visible {
  outline: solid 0.3rem var(--color-prime);
  outline-offset: -0.3rem;
  box-shadow: none;
}
.c_pull.-open {
  height: var(--pullHeightOpen, auto);
}
.c_pull.-open .c_pull_ttl::after {
  rotate: none;
}
@media screen and (width >= 48em) {
  .c_pull.-spPull {
    border: 0;
  }
  .c_pull.-spPull .c_pull_ttl {
    padding: 0;
    pointer-events: none;
    cursor: none;
  }
  .c_pull.-spPull .c_pull_ttl::before, .c_pull.-spPull .c_pull_ttl::after {
    content: none;
  }
  .c_pull.-spPull .c_pull_content {
    padding: 0;
  }
}

/* /アコーディオン  */
/* モーダル  */
.c_modal {
  inset: 0;
  z-index: 1;
  width: 100vw;
  height: 100dvh;
  padding: 0;
  margin: auto;
  background: none;
  border: 0;
  /* stylelint-disable-next-line no-descending-specificity */
}
.c_modal::backdrop {
  inset: 0;
  z-index: -1;
  width: 100%;
  height: 100%;
  margin: auto;
  content: "";
  background-color: rgba(0, 0, 0, 0.75);
  opacity: 0;
  transition: opacity var(--transition);
}
.c_modal_close {
  position: absolute;
  inset: -4.5rem 0 auto auto;
  z-index: 999;
  width: 4rem;
  height: 4rem;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
}
.c_modal_close:focus-visible {
  outline-color: var(--color-reversal);
}
.c_modal_close::before, .c_modal_close::after {
  position: absolute;
  inset: 0;
  z-index: 999;
  width: 0.2rem;
  height: 3.5rem;
  margin: auto;
  content: "";
  background-color: var(--color-reversal);
  rotate: -45deg;
}
.c_modal_close::after {
  rotate: 45deg;
}
.c_modal_content {
  position: absolute;
  inset: 0;
  width: -moz-fit-content;
  width: fit-content;
  max-width: 121.6rem;
  height: -moz-fit-content;
  height: fit-content;
  max-height: 100dvh;
  padding: 0;
  margin: auto;
  opacity: 0;
  transition: opacity var(--transition);
}
.c_modal_content:has(iframe) {
  width: auto;
}
.c_modal_content figure {
  width: -moz-fit-content;
  width: fit-content;
  margin: auto;
}
.c_modal_content iframe {
  aspect-ratio: 16/9;
}
.c_modal[open] .c_modal_content {
  animation: fade 1s ease 0s 1 forwards;
}
.c_modal[open]::backdrop {
  opacity: 1;
  transition: opacity var(--transition);
}

html:has(dialog[open]) {
  overflow: hidden;
}
html:has(dialog[open]) body {
  overflow: auto;
  scrollbar-gutter: stable;
}

/* /モーダル  */
/* タブ  */
.c_tab_list button[tabindex="-1"] {
  color: var(--color-prime);
  pointer-events: none;
  background-color: var(--color-reversal);
}
.c_tab_content {
  animation: fade var(--transition);
}
.c_tab_content[hidden] {
  opacity: 0;
}

/* フッター */
/* /フッター */
/* ヘッダー */
.l_header {
  position: relative;
  z-index: 9999;
  width: 100%;
}
.l_header .headerLogo {
  z-index: 999;
  transition: filter 0.3s ease-out 0.3s;
}
.l_header guide-tour {
  position: absolute;
  inset: auto 9.4rem 0 auto;
}
.l_header .headerNavi::before {
  position: fixed;
  inset: 0 0 auto auto;
  z-index: 997;
  height: 6rem;
  aspect-ratio: 1/1;
  margin: auto;
  content: "";
  border-radius: 50%;
  opacity: 0;
  transition: transform 0.6s cubic-bezier(0.6, -0.01, 0.1, 1), opacity 0.2s ease-out 0.3s;
  transform: translateZ(0) scale(0);
}
@media screen and (width >= 48em) {
  .l_header .headerNavi::before {
    content: none;
  }
}
.l_header .headerNavi .ac_menu {
  position: absolute;
  inset: 0 0 0 auto;
  z-index: 999;
  aspect-ratio: 1/1;
  margin: auto;
}
@media screen and (width >= 48em) {
  .l_header .headerNavi .ac_menu {
    display: none;
  }
}
.l_header .headerNavi .ac_menu > span {
  position: absolute;
  inset: 0;
  margin: auto;
  color: transparent;
  text-indent: -999rem;
  transition: background-color var(--transition);
}
.l_header .headerNavi .ac_menu > span::before, .l_header .headerNavi .ac_menu > span::after {
  position: absolute;
  inset: -0.7rem 0 auto;
  display: block;
  width: 100%;
  margin: auto;
  content: "";
  transition: rotate var(--transition);
}
.l_header .headerNavi .ac_menu > span::after {
  top: auto;
  bottom: -0.7rem;
}
.l_header .headerNavi .naviWrapper {
  position: absolute;
  inset: 0;
  z-index: 998;
  height: 100dvh;
  padding: 8.8rem 5.3333333333%;
  visibility: hidden;
  opacity: 0;
  transition: opacity 0.3s ease-out 0.4s;
}
@media screen and (width >= 48em) {
  .l_header .headerNavi .naviWrapper {
    position: relative;
    width: 100%;
    height: 100%;
    padding: 0;
    margin: auto;
    overflow-y: visible;
    visibility: visible;
    background-color: transparent;
    opacity: 1;
  }
}
.l_header .headerNavi #navi {
  position: relative;
  width: 100%;
  margin: auto;
  visibility: hidden;
  opacity: 0;
}
@media screen and (width >= 48em) {
  .l_header .headerNavi #navi {
    visibility: visible;
    opacity: 1;
  }
}
.l_header .headerNavi #navi > li a {
  position: relative;
  display: block;
}
@media screen and (width >= 48em) {
  .l_header .headerNavi #navi > li a::before {
    position: absolute;
    inset: auto 0 0;
    width: 0;
    height: 0.2rem;
    margin: auto;
    content: "";
    background-color: var(--color-prime);
    transition: width 0.4s cubic-bezier(0.165, 0.84, 0.44, 1);
    rotate: none;
  }
}
@media screen and (any-hover: hover) and (width >= 48em) {
  .l_header .headerNavi #navi > li a:hover {
    color: var(--color-prime);
  }
  .l_header .headerNavi #navi > li a:hover::before {
    width: 100%;
  }
}
@media screen and (width >= 48em) {
  .l_header .headerNavi #navi > li a:focus-visible {
    color: var(--color-prime);
  }
  .l_header .headerNavi #navi > li a:focus-visible::before {
    width: 100%;
  }
  .l_header .headerNavi #navi > li.-current .naviLink {
    pointer-events: none;
  }
  .l_header .headerNavi #navi > li.-current .naviLink::before {
    width: 100%;
  }
}
@media screen and (width < 48em) {
  .l_header .headerNavi #navi > li.has-child {
    overflow: hidden;
  }
}
.l_header .headerNavi #navi > li.has-child .spAccordion {
  position: absolute;
  inset: 0 0 0 auto;
  aspect-ratio: 1/1;
  margin: auto;
}
.l_header .headerNavi #navi > li.has-child .spAccordion > span {
  display: block;
  width: 100%;
  height: 100%;
  color: transparent;
  text-indent: -999rem;
}
.l_header .headerNavi #navi > li.has-child .spAccordion > span::before, .l_header .headerNavi #navi > li.has-child .spAccordion > span::after {
  position: absolute;
  inset: 0;
  display: block;
  width: 100%;
  margin: auto;
  content: "";
  transition: rotate var(--transition);
}
.l_header .headerNavi #navi > li.has-child .spAccordion > span::before {
  rotate: 90deg;
}
.l_header .headerNavi #navi > li.has-child .spAccordion.-open > span::before {
  rotate: none;
}
@media screen and (width >= 48em) {
  .l_header .headerNavi #navi > li.has-child > ul.subMenu {
    position: absolute;
    inset: 0 0 auto -50%;
    width: 200%;
    overflow: visible;
    visibility: hidden;
    opacity: 0;
    transition: top 0.8s cubic-bezier(0.165, 0.84, 0.44, 1), opacity var(--transition);
  }
}
@media screen and (width < 48em) {
  .l_header .headerNavi #navi > li.has-child > ul.subMenu {
    position: relative;
    height: 0;
    max-height: none;
    visibility: hidden;
    transition: height var(--transition), opacity var(--transition);
  }
  .l_header .headerNavi #navi > li.has-child > ul.subMenu.-open {
    height: var(--subHeaderHeight);
    visibility: visible;
    opacity: 1;
  }
}
@media screen and (width >= 48em) {
  .l_header .headerNavi #navi > li.has-child > ul.subMenu > li > a::before {
    right: auto;
  }
}
.l_header .headerNavi #navi > li.has-child > ul.subMenu.-open {
  height: var(--subHeightOpen, auto);
}
@media screen and (width >= 48em) and (any-hover: hover) {
  .l_header .headerNavi #navi > li.has-child:hover ul.subMenu {
    top: 100%;
    visibility: visible;
    opacity: 1;
  }
}
@media screen and (width >= 48em) {
  .l_header .headerNavi #navi > li.has-child:focus-visible ul.subMenu {
    top: 100%;
    visibility: visible;
    opacity: 1;
  }
  .l_header .headerNavi #navi > li.has-child:focus-within > ul.subMenu {
    top: 100%;
    visibility: visible;
    opacity: 1;
  }
}
.l_header .headerNavi.-open::before {
  opacity: 1;
  transition: transform 0.8s cubic-bezier(0.4, 0.1, 0.3, 1), oapcity 0.3s cubic-bezier(0.4, 0.1, 0.3, 1) 0.5s;
  transform: translateZ(0) scale(80);
}
.l_header .headerNavi.-open .ac_menu span {
  background-color: transparent;
  transition: background-color var(--transition);
}
.l_header .headerNavi.-open .ac_menu span::before, .l_header .headerNavi.-open .ac_menu span::after {
  top: 0;
  bottom: 0;
  background-color: var(--color-reversal);
  transition: rotate var(--transition);
  rotate: 45deg;
}
.l_header .headerNavi.-open .ac_menu span::after {
  rotate: -45deg;
}
@media screen and (width < 48em) {
  .l_header .headerNavi.-open .naviWrapper {
    visibility: visible;
    opacity: 1;
  }
  .l_header .headerNavi.-open .naviWrapper #navi {
    visibility: visible;
    opacity: 1;
  }
}
.l_header:has(.headerNavi.-open) .headerLogo {
  filter: invert(1);
}
.l_header.-fixed {
  position: fixed;
  top: 0;
  z-index: 5;
  width: 100%;
  background-color: var(--color-body);
}

@media screen and (width < 48em) {
  html:has(.headerNavi.-open) {
    overflow: hidden;
  }
  html:has(.headerNavi.-open) body {
    overflow: auto;
    scrollbar-gutter: stable;
  }
}
/* /ヘッダー */
#main {
  padding-top: var(--headerHeight);
}

/* アバウト */
.bg {
  background: url("/_assets/img/noimage.webp");
}

.text-box-ttl {
  margin-bottom: 0.5em;
  font-size: var(--font-size-heading-3);
  color: var(--color-prime);
}
.text-box-txt {
  font-size: var(--font-size-large-1);
}
.text-box-txt-span {
  font-size: var(--font-size-large-2);
  color: var(--color-reversal);
  background-color: var(--color-prime);
}
.text-box-txt-span--blue {
  color: var(--color-third);
}

/* /アバウト */
/* カート */
.cartSec {
  position: relative;
  width: 100%;
  max-width: 37.5rem;
  margin-inline: auto;
}
.cartSec .mv_slide_main .splide__track {
  width: -moz-fit-content;
  width: fit-content;
  margin-inline: auto;
}
.cartSec .mv_slide_main img {
  width: 100%;
}
.cartSec .mv_slide_thumb {
  margin-top: 1.6rem;
}
.cartSec .mv_slide_thumb .splide__track {
  width: -moz-fit-content;
  width: fit-content;
  margin-inline: auto;
}
.cartSec .mv_slide_thumb .splide__slide figure {
  position: relative;
  display: block;
  width: -moz-fit-content;
  width: fit-content;
  height: -moz-fit-content;
  height: fit-content;
}
.cartSec .mv_slide_thumb .splide__slide figure::before, .cartSec .mv_slide_thumb .splide__slide figure::after {
  position: absolute;
  inset: 0;
  width: 100%;
  height: 100%;
  margin: auto;
  content: "";
  border-radius: 0.8rem;
  outline: 0.6rem solid #fff;
  outline-offset: -0.6rem;
  opacity: 0;
}
.cartSec .mv_slide_thumb .splide__slide figure::after {
  outline: 0.3rem solid #448aff;
  outline-offset: -0.3rem;
}
.cartSec .mv_slide_thumb .splide__slide.is-active figure::before, .cartSec .mv_slide_thumb .splide__slide.is-active figure::after {
  opacity: 1;
}
.cartSec .mv_slide_thumb img {
  display: block;
  height: 5.2rem;
  aspect-ratio: 1/1;
  border: 0.1rem solid #bdbdbd;
  border-radius: 0.8rem;
}
.cartSec .selectList {
  display: flex;
  grid-template-columns: auto;
  margin-bottom: 2.4rem;
}
.cartSec .selectList li {
  line-height: 0;
}
.cartSec .selectList input:checked + label {
  position: relative;
  pointer-events: none;
  border-color: transparent;
  box-shadow: none;
}
.cartSec .selectList input:checked + label::after {
  opacity: 1;
}
.cartSec .select {
  width: 0;
  height: 0;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
}
.cartSec #select_volume {
  width: 13.4rem;
  height: 5rem;
  padding-inline: 1.6rem;
  font-size: 1.8rem;
  line-height: 1.5;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  background-color: transparent;
  border: 0.1rem solid #000;
  border-radius: 0.8rem;
}
.cartSec .select_container {
  position: relative;
  width: -moz-fit-content;
  width: fit-content;
}
.cartSec .select_container::before, .cartSec .select_container::after {
  position: absolute;
  inset: 0 0 0 auto;
  z-index: -1;
  margin: auto;
  content: "";
}
.cartSec .select_container::before {
  width: 4.4rem;
  height: 5rem;
  background-color: #424242;
  border-radius: 0 0.4rem 0.4rem 0;
}
.cartSec .select_container::after {
  position: absolute;
  right: 1.7rem;
  height: 1rem;
  aspect-ratio: 1/1;
  border: 0.2rem solid #fff;
  border-width: 0 0.2rem 0.2rem 0;
  rotate: 45deg;
}
.cartSec .priceContainer {
  display: flex;
  align-items: flex-end;
  justify-content: space-between;
  margin-top: 4.4rem;
}
.cartSec .priceContainer .priceContainer_txt {
  font-size: 4.5rem;
  font-weight: 600;
  line-height: 1.5;
}
.cartSec .priceContainer .priceContainer_txt span {
  margin-left: 1em;
  font-size: 1.5rem;
  font-weight: bold;
  line-height: 1.2;
}
.cartSec .priceContainer .priceContainer_link {
  font-size: 1.5rem;
  font-weight: bold;
  line-height: 1.8;
  color: #448aff;
  text-decoration: underline;
}
.cartSec .cartBtn {
  margin-block: 2.4rem;
}
.cartSec .cartLink {
  margin-block: 2.4rem 6rem;
  font-size: 1.5rem;
  font-weight: bold;
  color: #448aff;
  text-align: center;
  text-decoration: underline;
}
.cartSec .bread {
  margin-block: 6.4rem 3.2rem;
}

.code {
  width: 100%;
  height: 30rem;
  background-color: #fff;
}

header.-relative {
  position: relative !important;
}

.inquiryMain {
  min-height: inherit;
}

.bnrContent {
  padding: 80px 0 88px;
  border-top: 1px solid var(--color-prime);
}

.formContent input,
.formContent button,
.formContent select,
.formContent textarea {
  font: inherit;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: transparent;
  outline: none;
}
.formContent textarea {
  resize: vertical;
}
.formContent input[type=checkbox],
.formContent input[type=radio] {
  display: none;
}
.formContent input[type=submit],
.formContent input[type=button],
.formContent label,
.formContent button,
.formContent select {
  cursor: pointer;
}
.formContent select::-ms-expand {
  display: none;
}

.formContainer {
  position: relative;
  margin-bottom: 60px;
}
.formContainer .btnStyle {
  height: 60px;
  margin: auto;
  font-weight: 600;
  border-radius: 6px;
}

.formTable {
  margin-bottom: 40px;
  border: 1px solid var(--color-prime);
}
.formTable tr {
  border: 1px solid var(--color-prime);
}
.formTable .-disabled {
  display: none;
}
.formTable th {
  position: relative;
  width: 326px;
  padding: 29px 24px;
  font-weight: bold;
  line-height: 1;
  text-align: left;
  vertical-align: top;
  background-color: var(--color-second);
  background-clip: padding-box;
  border-right: 1px solid var(--color-prime);
}
.formTable th::before {
  padding: 0.1em 0.3em;
  margin: auto;
  margin-right: 0.5em;
  line-height: 1;
  color: var(--color-second);
  vertical-align: unset;
  content: "任意";
  background-color: var(--color-reversal);
  border: 1px solid var(--color-prime);
  border-radius: 3px;
}
.formTable th.required::before {
  color: var(--color-reversal);
  content: "必須";
  background-color: var(--color-second);
  border-color: var(--color-second);
}
.formTable th small {
  display: block;
  margin-top: 0.5em;
}
.formTable th label {
  font-weight: bold;
}
.formTable td {
  padding: 14px 24px 14px 40px;
}
.formTable td.-vertical label {
  display: block;
}
.formTable td.-vertical label:not(:last-of-type) {
  margin-bottom: 30px;
}
.formTable td .inputMsg {
  margin-top: 0.2em;
}
.formTable input[type=text],
.formTable input[type=email],
.formTable input[type=tel],
.formTable textarea {
  width: 100%;
  max-width: 560px;
  height: 50px;
  padding: 0.3em 1em;
  border: 1px solid var(--color-prime);
  border-radius: 3px;
  outline: none;
}
.formTable input[type=text]:focus,
.formTable input[type=email]:focus,
.formTable input[type=tel]:focus,
.formTable textarea:focus {
  border-color: var(--color-txt);
}
.formTable select {
  width: 100%;
  max-width: 340px;
  height: 50px;
  padding-right: 49px;
  padding-left: 20px;
  border: 1px solid var(--color-prime);
}
.formTable input[type=radio] {
  display: none;
}
.formTable input[type=radio] + label {
  position: relative;
  padding: 0 0 0 40px;
}
.formTable input[type=radio] + label::before, .formTable input[type=radio] + label::after {
  position: absolute;
  top: 0;
  bottom: 0;
  display: block;
  margin: auto;
  content: "";
}
.formTable input[type=radio] + label::after {
  left: 0;
  width: 30px;
  height: 30px;
  border: 1px solid var(--color-prime);
  border-radius: 50%;
}
.formTable input[type=radio] + label::before {
  left: 7px;
  width: 16px;
  height: 16px;
  background: var(--color-second);
  border-radius: 50%;
  opacity: 0;
}
.formTable input[type=radio]:checked + label {
  font-weight: bold;
}
.formTable input[type=radio]:checked + label::before {
  opacity: 1;
}
.formTable label[for=mailing],
.formTable label[for=otherzip] {
  margin-left: 76px;
}
.formTable .selectBox {
  position: relative;
  z-index: 1;
  display: block;
  width: 100%;
  max-width: 340px;
  height: 50px;
}
.formTable .selectBox::before {
  position: absolute;
  top: 0;
  right: 0;
  z-index: -1;
  width: 49px;
  height: 100%;
  margin: auto;
  content: "";
  background: var(--color-second);
}
.formTable .selectBox::after {
  position: absolute;
  top: 0;
  right: 19.6px;
  bottom: 0;
  width: 12px;
  height: 12px;
  margin: auto;
  content: "";
  border-right: 3px solid var(--color-reversal);
  border-bottom: 3px solid var(--color-reversal);
  transform: rotate(45deg);
  transform-origin: center;
}
.formTable .half {
  display: flex;
  gap: 0 60px;
  justify-content: flex-start;
}
.formTable .half label,
.formTable .half input,
.formTable .half span {
  display: flex;
  align-items: center;
}
.formTable .half label {
  width: 2em;
  min-width: 2.2em;
  margin-right: 8px;
  font-weight: bold;
}
.formTable .half input {
  max-width: 200px;
  height: 50px;
}
.formTable .zipcode {
  display: block;
}
.formTable .zipcode label {
  display: table;
  margin-bottom: 0.2em;
  font-weight: bold;
  table-layout: fixed;
}
.formTable .zipcode .zipCodeContainer {
  display: inline-block;
  max-width: 350px;
}
.formTable .zipcode input {
  display: inline-block;
  max-width: 340px;
  height: 50px;
}
.formTable .zipcode small {
  display: inline-block;
  width: 54%;
  padding-left: 14px;
  font-size: 1.2rem;
  vertical-align: top;
}
.formTable .zipcode small a {
  display: block;
  margin-bottom: 0.5em;
  font-size: 1.4rem;
  text-decoration: underline !important;
}
.formTable .zipcode:not(:last-of-type) {
  margin-bottom: 28px;
}
.formTable .policyCheckBox {
  display: table;
  margin-top: 0.5em;
  text-align: left;
  table-layout: fixed;
}
.formTable .policyCheckBox input[type=checkbox] {
  position: absolute;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  background: none;
  border: 0;
}
.formTable .policyCheckBox input[type=checkbox]:focus-visible {
  border-color: transparent;
}
.formTable .policyCheckBox input[type=checkbox]:checked ~ label::after {
  position: absolute;
  top: 2px;
  bottom: 0;
  left: 10px;
  display: block;
  width: 10px;
  height: 16px;
  content: "";
  border: 1px solid var(--color-second);
  border-width: 0 2px 2px 0;
  transform: rotate(40deg);
}
.formTable .policyCheckBox input[type=checkbox]:checked ~ label::before {
  border-color: var(--color-prime);
}
.formTable .policyCheckBox label {
  position: relative;
  display: block;
  padding-left: 38px;
  font-weight: bold;
}
.formTable .policyCheckBox label::before {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  display: block;
  width: 30px;
  height: 30px;
  margin: auto;
  content: "";
  border: 1px solid var(--color-prime);
  border-radius: 3px;
}
.formTable .policyLink {
  color: var(--color-second) !important;
  text-decoration: underline !important;
}

.inquiry_tel {
  padding: 32px;
  background: var(--color-second);
  border: 1px solid var(--color-prime);
}

.inquiry_tel_text {
  font-size: 3.4rem;
  margin-bottom: 0.5em !important;
  font-weight: bold;
  line-height: 1;
  color: var(--color-prime);
}
@media screen and (width >= 48em) {
  .inquiry_tel_text {
    font-size: 2.4rem;
  }
}
.inquiry_tel_text img {
  margin-right: 8px;
  vertical-align: middle;
}

a[href^="tel:"].telLink {
  font-weight: bold;
  line-height: 1;
  color: var(--color-prime) !important;
  vertical-align: middle;
}
a[href^="tel:"].telLink img {
  vertical-align: unset;
}

.inquiry_span {
  font-size: 2.7rem;
  width: 100%;
  padding: 0.5em 1em;
  margin-left: 15.8px;
  font-weight: bold;
  line-height: 1;
  color: var(--color-second);
  vertical-align: middle;
  background: var(--color-reversal);
}
@media screen and (width >= 48em) {
  .inquiry_span {
    font-size: 1.8rem;
  }
}

.inquiry_company {
  margin: 60px auto 100px;
}

.infoBox {
  padding: 30px 0;
  background-attachment: fixed;
}
.infoBox strong {
  display: block;
  text-align: center;
}
.infoBox .telLink2 {
  margin-left: 1.5em;
}
.infoBox .telLink2 img {
  margin-right: 0.1em;
  vertical-align: middle;
  filter: brightness(0);
}

.confirmModal {
  display: none;
}
.confirmModal.-open {
  position: fixed;
  top: 0;
  left: 0;
  z-index: 2000;
  display: block;
  width: 100%;
  height: 100vh;
  animation: modalFadeIn 0.3s;
}
.confirmModal.-open .bg {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  transition: 1s;
}

@keyframes modalFadeIn {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}
.confContent {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 90%;
  max-width: 1200px;
  height: 80%;
  padding: 0 20px;
  overflow: auto;
  background: #fff;
  border-top: 1px solid var(--color-prime);
  transform: translate(-50%, -50%);
}
.confContent .conf_ttl {
  font-size: 3.2rem;
  display: block;
  padding: 2.3em 0 1em;
  font-weight: bold;
  text-align: center;
}
@media screen and (width >= 48em) {
  .confContent .conf_ttl {
    font-size: 2.4rem;
  }
}
.confContent .conf_ttl::before, .confContent .conf_ttl::after {
  content: none;
}
.confContent .formTable {
  max-width: 800px;
  margin: 0 auto;
}
.confContent .formTable th {
  font-size: 2.6rem;
  width: 213px;
  padding: 22px 25px;
}
@media screen and (width >= 48em) {
  .confContent .formTable th {
    font-size: 1.4rem;
  }
}
.confContent .formTable th::before, .confContent .formTable th::after {
  content: none;
}
.confContent .formTable td {
  font-size: 3.2rem;
}
@media screen and (width >= 48em) {
  .confContent .formTable td {
    font-size: 1.8rem;
  }
}
.confContent .submitContainer {
  display: flex;
  gap: 0 30px;
  justify-content: center;
  padding-bottom: 82px;
  margin-top: 40px;
}
.confContent .cancelBtn {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 200px;
  height: 55px;
  font-weight: 600;
  text-decoration: none !important;
  border-radius: 6px;
  box-shadow: 0 4px 0 0 var(--color-txt);
}
.confContent .cancelBtn:hover {
  box-shadow: 0 4px 0 0 transparent;
  transition: 0.1s;
  transform: translateY(4px);
}
.confContent .btnStyle {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 200px;
  height: 55px;
  padding: 0;
  margin: 0;
  border: 0;
}
.confContent .btnStyle::before, .confContent .btnStyle::after {
  content: none;
}

.thanksContent {
  padding: 80px 0 0;
  border-top: 1px solid var(--color-prime);
}
.thanksContent .thanks_ttl {
  font-size: 4.4rem;
  display: block;
  padding-bottom: 0.3em;
  font-weight: 600;
  text-align: left;
  border-bottom: 1px solid var(--color-second);
}
@media screen and (width >= 48em) {
  .thanksContent .thanks_ttl {
    font-size: 3.6rem;
  }
}
.thanksContent .thanks_ttl::before, .thanksContent .thanks_ttl::after {
  content: none;
}
.thanksContent .btnStyle {
  margin-top: 80px;
}

.inquiry_contact {
  padding: 60px 0;
  margin-top: 80px;
}
.inquiry_contact strong {
  font-size: 2.4rem;
}
.inquiry_contact .telBnr {
  margin-top: 40px;
}
.inquiry_contact .btnStyle {
  margin: 0;
}

.inquiry_top {
  margin: 80px 0 96px;
}

.-error input, .-error.selectBox {
  background-color: #ffeded;
  border-color: #ec3f3f !important;
}
.-error input::-moz-placeholder, .-error.selectBox::-moz-placeholder {
  color: red;
}
.-error input::placeholder, .-error.selectBox::placeholder {
  color: red;
}
.-error select {
  border-color: #ffeded !important;
}

.errorText {
  font-size: 2.4rem;
  position: relative;
  display: none;
  padding-left: 1.3em;
  font-style: normal;
  color: #ec3f3f;
}
@media screen and (width >= 48em) {
  .errorText {
    font-size: 1.4rem;
  }
}
.errorText::before {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  display: inline-block;
  width: 12px;
  height: 12px;
  margin: auto;
  content: "";
}
.errorText.-active {
  display: block;
}
.errorText.-active::before {
  animation: error 1.5s ease 0s infinite normal;
}

@keyframes error {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0;
  }
}
#forConfrim:disabled {
  pointer-events: none;
  cursor: none;
  filter: grayscale(1);
  opacity: 0.8;
}

input:-webkit-autofill {
  box-shadow: 0 0 0 999px #fff inset;
}

select:-webkit-autofill {
  -webkit-transition: background-color 10000s ease-in-out 0s;
  transition: background-color 10000s ease-in-out 0s;
}

.c_btn {
  margin-inline: auto;
}

.helpBtn {
  position: fixed;
  top: 5rem;
  right: 0;
  display: inline-block;
  border-radius: 1rem 0 0 1rem !important;
  writing-mode: tb-rl;
  writing-mode: vertical-rl;
}

/* トップ */
.textLink {
  position: relative;
  font-size: 1.8rem;
}
@media screen and (width >= 48em) {
  .textLink {
    font-size: 1.5rem;
  }
}
@media (any-hover: hover) {
  .textLink:hover {
    color: var(--color-second);
  }
}
.textLink:focus-visible {
  color: var(--color-second);
}
@media screen and (width >= 48em) {
  .textLink {
    color: red;
  }
}
.textLink::after {
  display: inline-block;
  height: 1em;
  aspect-ratio: 1/1;
  margin: auto;
  margin-left: 0.5em;
  vertical-align: middle;
  content: "";
  background-color: red;
  -webkit-mask-repeat: no-repeat;
          mask-repeat: no-repeat;
  -webkit-mask-position: center;
          mask-position: center;
  -webkit-mask-size: contain;
          mask-size: contain;
}

/* /トップ */
*, ::before, ::after{
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}
::backdrop{
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}
/* ! tailwindcss v3.4.13 | MIT License | https://tailwindcss.com  */
/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/
*,
::before,
::after {
  box-sizing: border-box; /* 1 */
  border-width: 0; /* 2 */
  border-style: solid; /* 2 */
  border-color: currentColor; /* 2 */
}
::before,
::after {
  --tw-content: '';
}
/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
7. Disable tap highlights on iOS
*/
html,
:host {
  line-height: 1.5; /* 1 */
  -webkit-text-size-adjust: 100%; /* 2 */
  -moz-tab-size: 4; /* 3 */
  -o-tab-size: 4;
     tab-size: 4; /* 3 */
  font-family: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"; /* 4 */
  font-feature-settings: normal; /* 5 */
  font-variation-settings: normal; /* 6 */
  -webkit-tap-highlight-color: transparent; /* 7 */
}
/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/
body {
  margin: 0; /* 1 */
  line-height: inherit; /* 2 */
}
/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/
hr {
  height: 0; /* 1 */
  color: inherit; /* 2 */
  border-top-width: 1px; /* 3 */
}
/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/
abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}
/*
Remove the default font size and weight for headings.
*/
h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}
/*
Reset links to optimize for opt-in styling instead of opt-out.
*/
a {
  color: inherit;
  text-decoration: inherit;
}
/*
Add the correct font weight in Edge and Safari.
*/
b,
strong {
  font-weight: bolder;
}
/*
1. Use the user's configured `mono` font-family by default.
2. Use the user's configured `mono` font-feature-settings by default.
3. Use the user's configured `mono` font-variation-settings by default.
4. Correct the odd `em` font sizing in all browsers.
*/
code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace; /* 1 */
  font-feature-settings: normal; /* 2 */
  font-variation-settings: normal; /* 3 */
  font-size: 1em; /* 4 */
}
/*
Add the correct font size in all browsers.
*/
small {
  font-size: 80%;
}
/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}
sub {
  bottom: -0.25em;
}
sup {
  top: -0.5em;
}
/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/
table {
  text-indent: 0; /* 1 */
  border-color: inherit; /* 2 */
  border-collapse: collapse; /* 3 */
}
/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/
button,
input,
optgroup,
select,
textarea {
  font-family: inherit; /* 1 */
  font-feature-settings: inherit; /* 1 */
  font-variation-settings: inherit; /* 1 */
  font-size: 100%; /* 1 */
  font-weight: inherit; /* 1 */
  line-height: inherit; /* 1 */
  letter-spacing: inherit; /* 1 */
  color: inherit; /* 1 */
  margin: 0; /* 2 */
  padding: 0; /* 3 */
}
/*
Remove the inheritance of text transform in Edge and Firefox.
*/
button,
select {
  text-transform: none;
}
/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/
button,
input:where([type='button']),
input:where([type='reset']),
input:where([type='submit']) {
  -webkit-appearance: button; /* 1 */
  background-color: transparent; /* 2 */
  background-image: none; /* 2 */
}
/*
Use the modern Firefox focus style for all focusable elements.
*/
:-moz-focusring {
  outline: auto;
}
/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/
:-moz-ui-invalid {
  box-shadow: none;
}
/*
Add the correct vertical alignment in Chrome and Firefox.
*/
progress {
  vertical-align: baseline;
}
/*
Correct the cursor style of increment and decrement buttons in Safari.
*/
::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}
/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/
[type='search'] {
  -webkit-appearance: textfield; /* 1 */
  outline-offset: -2px; /* 2 */
}
/*
Remove the inner padding in Chrome and Safari on macOS.
*/
::-webkit-search-decoration {
  -webkit-appearance: none;
}
/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/
::-webkit-file-upload-button {
  -webkit-appearance: button; /* 1 */
  font: inherit; /* 2 */
}
/*
Add the correct display in Chrome and Safari.
*/
summary {
  display: list-item;
}
/*
Removes the default spacing and border for appropriate elements.
*/
blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}
fieldset {
  margin: 0;
  padding: 0;
}
legend {
  padding: 0;
}
ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}
/*
Reset default styling for dialogs.
*/
dialog {
  padding: 0;
}
/*
Prevent resizing textareas horizontally by default.
*/
textarea {
  resize: vertical;
}
/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/
input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1; /* 1 */
  color: #9ca3af; /* 2 */
}
input::placeholder,
textarea::placeholder {
  opacity: 1; /* 1 */
  color: #9ca3af; /* 2 */
}
/*
Set the default cursor for buttons.
*/
button,
[role="button"] {
  cursor: pointer;
}
/*
Make sure disabled buttons don't get the pointer cursor.
*/
:disabled {
  cursor: default;
}
/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/
img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block; /* 1 */
  vertical-align: middle; /* 2 */
}
/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/
img,
video {
  max-width: 100%;
  height: auto;
}
/* Make elements with the HTML hidden attribute stay hidden by default */
[hidden] {
  display: none;
}
.visible{
  visibility: visible;
}
.static{
  position: static;
}
.fixed{
  position: fixed;
}
.absolute{
  position: absolute;
}
.relative{
  position: relative;
}
.sticky{
  position: sticky;
}
.m-auto{
  margin: auto;
}
.mx-auto{
  margin-left: auto;
  margin-right: auto;
}
.my-\[2\.4rem\]{
  margin-top: 2.4rem;
  margin-bottom: 2.4rem;
}
.my-\[3rem\]{
  margin-top: 3rem;
  margin-bottom: 3rem;
}
.mb-3{
  margin-bottom: 3rem;
}
.mb-\[0\.5em\]{
  margin-bottom: 0.5em;
}
.mb-\[0\.5rem\]{
  margin-bottom: 0.5rem;
}
.mb-\[0\.8rem\]{
  margin-bottom: 0.8rem;
}
.mb-\[1\.2rem\]{
  margin-bottom: 1.2rem;
}
.mb-\[1\.6rem\]{
  margin-bottom: 1.6rem;
}
.mb-\[1em\]{
  margin-bottom: 1em;
}
.mb-\[2\.4rem\]{
  margin-bottom: 2.4rem;
}
.mb-\[2em\]{
  margin-bottom: 2em;
}
.mb-\[2rem\]{
  margin-bottom: 2rem;
}
.mb-\[3\.2rem\]{
  margin-bottom: 3.2rem;
}
.mb-\[3\.6rem\]{
  margin-bottom: 3.6rem;
}
.mb-\[3rem\]{
  margin-bottom: 3rem;
}
.mb-\[5rem\]{
  margin-bottom: 5rem;
}
.mb-\[6rem\]{
  margin-bottom: 6rem;
}
.ml-auto{
  margin-left: auto;
}
.mr-0{
  margin-right: 0rem;
}
.mr-auto{
  margin-right: auto;
}
.block{
  display: block;
}
.inline{
  display: inline;
}
.flex{
  display: flex;
}
.table{
  display: table;
}
.grid{
  display: grid;
}
.contents{
  display: contents;
}
.hidden{
  display: none;
}
.aspect-\[240\/160\]{
  aspect-ratio: 240/160;
}
.h-\[2rem\]{
  height: 2rem;
}
.h-\[5\.6rem\]{
  height: 5.6rem;
}
.w-\[100\%\]{
  width: 100%;
}
.w-\[20rem\]{
  width: 20rem;
}
.w-full{
  width: 100%;
}
.max-w-\[24rem\]{
  max-width: 24rem;
}
.max-w-\[27rem\]{
  max-width: 27rem;
}
.max-w-\[28rem\]{
  max-width: 28rem;
}
.max-w-\[32rem\]{
  max-width: 32rem;
}
.max-w-\[37\.2rem\]{
  max-width: 37.2rem;
}
.max-w-\[48rem\]{
  max-width: 48rem;
}
.transform{
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.resize{
  resize: both;
}
.list-disc{
  list-style-type: disc;
}
.grid-cols-1{
  grid-template-columns: repeat(1, minmax(0, 1fr));
}
.grid-cols-3{
  grid-template-columns: repeat(3, minmax(0, 1fr));
}
.grid-cols-5{
  grid-template-columns: repeat(5, minmax(0, 1fr));
}
.grid-cols-\[auto\2c 1fr\]{
  grid-template-columns: auto 1fr;
}
.grid-cols-\[auto_1fr\]{
  grid-template-columns: auto 1fr;
}
.flex-col{
  flex-direction: column;
}
.items-center{
  align-items: center;
}
.justify-center{
  justify-content: center;
}
.justify-between{
  justify-content: space-between;
}
.gap-\[0\.8rem\]{
  gap: 0.8rem;
}
.gap-\[1\.2rem\]{
  gap: 1.2rem;
}
.gap-\[1\.6rem\]{
  gap: 1.6rem;
}
.gap-\[1em\]{
  gap: 1em;
}
.gap-\[3\.2rem\]{
  gap: 3.2rem;
}
.gap-\[3rem\]{
  gap: 3rem;
}
.gap-x-\[1\.6rem\]{
  -moz-column-gap: 1.6rem;
       column-gap: 1.6rem;
}
.gap-x-\[3rem\]{
  -moz-column-gap: 3rem;
       column-gap: 3rem;
}
.gap-y-\[0\.4rem\]{
  row-gap: 0.4rem;
}
.gap-y-\[4\.9rem\]{
  row-gap: 4.9rem;
}
.gap-y-\[4rem\]{
  row-gap: 4rem;
}
.overflow-hidden{
  overflow: hidden;
}
.overflow-visible{
  overflow: visible;
}
.rounded-\[0\.6rem\]{
  border-radius: 0.6rem;
}
.rounded-\[0\.8rem\]{
  border-radius: 0.8rem;
}
.rounded-\[1rem\]{
  border-radius: 1rem;
}
.rounded-\[5\.6rem\]{
  border-radius: 5.6rem;
}
.rounded-\[8rem\]{
  border-radius: 8rem;
}
.rounded-\[999rem\]{
  border-radius: 999rem;
}
.rounded-\[99rem\]{
  border-radius: 99rem;
}
.border{
  border-width: 1px;
}
.border-\[0\.1rem\]{
  border-width: 0.1rem;
}
.border-prime{
  border-color: var(--color-prime);
}
.bg-gray{
  background-color: var(--color-gray);
}
.bg-highlight{
  background-color: var(--color-highlight);
}
.bg-prime{
  background-color: var(--color-prime);
}
.bg-second{
  background-color: var(--color-second);
}
.bg-none{
  background-image: none;
}
.object-cover{
  -o-object-fit: cover;
     object-fit: cover;
}
.p-\[0\.1em_0\.5em\]{
  padding: 0.1em 0.5em;
}
.p-\[1em\]{
  padding: 1em;
}
.p-\[2\.4rem\]{
  padding: 2.4rem;
}
.p-\[5\.6rem_2\.4rem\]{
  padding: 5.6rem 2.4rem;
}
.px-\[1\.2rem\]{
  padding-left: 1.2rem;
  padding-right: 1.2rem;
}
.py-\[5rem\]{
  padding-top: 5rem;
  padding-bottom: 5rem;
}
.py-\[8rem\]{
  padding-top: 8rem;
  padding-bottom: 8rem;
}
.pb-\[2\.8rem\]{
  padding-bottom: 2.8rem;
}
.pb-\[5rem\]{
  padding-bottom: 5rem;
}
.pl-\[1em\]{
  padding-left: 1em;
}
.pt-\[1\.6rem\]{
  padding-top: 1.6rem;
}
.pt-\[3\.6rem\]{
  padding-top: 3.6rem;
}
.pt-\[4rem\]{
  padding-top: 4rem;
}
.text-left{
  text-align: left;
}
.text-center{
  text-align: center;
}
.text-\[1\.4rem\]{
  font-size: 1.4rem;
}
.text-\[1rem\]{
  font-size: 1rem;
}
.text-\[3\.5rem\]{
  font-size: 3.5rem;
}
.text-h1{
  font-size: var(--font-size-heading-1);
}
.text-h2{
  font-size: var(--font-size-heading-2);
}
.text-h3{
  font-size: var(--font-size-heading-3);
}
.text-lg{
  font-size: var(--font-size-large-1);
}
.text-sm{
  font-size: var(--font-size-small-1);
}
.text-xl{
  font-size: var(--font-size-large-2);
}
.font-bold{
  font-weight: 700;
}
.font-semibold{
  font-weight: 600;
}
.leading-\[1\.8\]{
  line-height: 1.8;
}
.leading-\[calc\(18\.38\/14\)\]{
  line-height: calc(18.38 / 14);
}
.leading-\[calc\(45\.5\/35\)\]{
  line-height: calc(45.5 / 35);
}
.tracking-\[0\.08em\]{
  letter-spacing: 0.08em;
}
.text-prime{
  color: var(--color-prime);
}
.text-reversal{
  color: var(--color-reversal);
}
.text-transparent{
  color: transparent;
}
.text-txt{
  color: var(--color-txt);
}
.underline{
  text-decoration-line: underline;
}
.filter{
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}
.transition{
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.transition-opacity{
  transition-property: opacity;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.before\:h-\[0\.2rem\]::before{
  content: var(--tw-content);
  height: 0.2rem;
}
.before\:bg-reversal::before{
  content: var(--tw-content);
  background-color: var(--color-reversal);
}
.after\:h-\[0\.2rem\]::after{
  content: var(--tw-content);
  height: 0.2rem;
}
.after\:bg-reversal::after{
  content: var(--tw-content);
  background-color: var(--color-reversal);
}
.hover\:opacity-70:hover{
  opacity: 0.7;
}
@media (min-width: 768px){
  .md\:mb-\[1rem\]{
    margin-bottom: 1rem;
  }
  .md\:mb-\[2\.4rem\]{
    margin-bottom: 2.4rem;
  }
  .md\:mb-\[4rem\]{
    margin-bottom: 4rem;
  }
  .md\:mr-0{
    margin-right: 0rem;
  }
  .md\:flex{
    display: flex;
  }
  .md\:h-\[5\.6rem\]{
    height: 5.6rem;
  }
  .md\:w-auto{
    width: auto;
  }
  .md\:grid-cols-2{
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
  .md\:grid-cols-\[13\.1rem\2c auto\]{
    grid-template-columns: 13.1rem auto;
  }
  .md\:grid-cols-\[24rem\2c 1fr\]{
    grid-template-columns: 24rem 1fr;
  }
  .md\:items-center{
    align-items: center;
  }
  .md\:gap-\[3rem\]{
    gap: 3rem;
  }
  .md\:gap-x-\[3\.4rem\]{
    -moz-column-gap: 3.4rem;
         column-gap: 3.4rem;
  }
  .md\:gap-x-\[min\(20\%\2c 12rem\)\]{
    -moz-column-gap: min(20%,12rem);
         column-gap: min(20%,12rem);
  }
  .md\:gap-y-\[6\.5rem\]{
    row-gap: 6.5rem;
  }
  .md\:rounded-\[4rem\]{
    border-radius: 4rem;
  }
  .md\:bg-second{
    background-color: var(--color-second);
  }
  .md\:p-\[1\.6rem_0\.4rem\]{
    padding: 1.6rem 0.4rem;
  }
  .md\:p-\[8rem\]{
    padding: 8rem;
  }
  .md\:px-0{
    padding-left: 0rem;
    padding-right: 0rem;
  }
  .md\:py-\[0\.5em\]{
    padding-top: 0.5em;
    padding-bottom: 0.5em;
  }
  .md\:py-\[14rem\]{
    padding-top: 14rem;
    padding-bottom: 14rem;
  }
  .md\:pb-\[0\.8rem\]{
    padding-bottom: 0.8rem;
  }
  .md\:pb-\[6\.4rem\]{
    padding-bottom: 6.4rem;
  }
  .md\:pt-\[6\.4rem\]{
    padding-top: 6.4rem;
  }
  .md\:text-\[1\.2rem\]{
    font-size: 1.2rem;
  }
  .md\:text-\[1\.6rem\]{
    font-size: 1.6rem;
  }
  .md\:text-\[1\.8rem\]{
    font-size: 1.8rem;
  }
  .md\:text-\[2\.4rem\]{
    font-size: 2.4rem;
  }
  .md\:text-\[4rem\]{
    font-size: 4rem;
  }
  .md\:leading-\[calc\(24\/16\)\]{
    line-height: calc(24 / 16);
  }
  .md\:leading-\[calc\(60\/40\)\]{
    line-height: calc(60 / 40);
  }
  .md\:text-prime{
    color: var(--color-prime);
  }
}
.\[\&\:not\(\:last-child\)\]\:mb-\[1\.6rem\]:not(:last-child){
  margin-bottom: 1.6rem;
}